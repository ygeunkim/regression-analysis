[
["index.html", "R Lab for Regression Analysis Welcome Linear Regression Analysis", " R Lab for Regression Analysis Young-geun Kim Department of Statistics, SKKU 08 Apr, 2019 Welcome This book aims at covering materials of regression analysis. Also, there will be R programming for regression. library(tidyverse) tidyverse package will be used in every chapter, so loading step will be hidden. Linear Regression Analysis data(BioOxyDemand, package = &quot;MPV&quot;) (BioOxyDemand &lt;- BioOxyDemand %&gt;% tbl_df()) # A tibble: 14 x 2 x y &lt;int&gt; &lt;int&gt; 1 3 4 2 8 7 3 10 8 4 11 8 5 13 10 6 16 11 7 27 16 8 30 26 9 35 21 10 37 9 11 38 31 12 44 30 13 103 75 14 142 90 Relation We wonder how x affects y, especially linearly. Functional relation: mathematical equation, \\[y = \\beta_0 + \\beta_1 x\\] Statistical relation: embeded with noise So we try to estimate \\[y = \\beta_0 + \\beta_1 x + \\epsilon\\] BioOxyDemand %&gt;% ggplot(aes(x, y)) + geom_point() Looking just with the eyes, we can see the linear relationship. Regression analysis estimates the relationship statistically. BioOxyDemand %&gt;% ggplot(aes(x, y)) + geom_smooth(method = &quot;lm&quot;) + geom_point() "],
["simple.html", "Chapter 1 Simple Linear Regression 1.1 Model 1.2 Least Squares Estimation 1.3 Maximum Likelihood Estimation 1.4 Residuals 1.5 Decomposition of Total Variability 1.6 Geometric Interpretations 1.7 Distributions 1.8 Statistical Inference 1.9 Analysis of Variance", " Chapter 1 Simple Linear Regression 1.1 Model delv &lt;- MPV::p2.9 %&gt;% tbl_df() delv %&gt;% ggplot(aes(x = x, y = y)) + geom_point() + labs( x = &quot;Number of Cases&quot;, y = &quot;Delivery Time&quot; ) Figure 1.1: The Delivery Time Data Given data \\((x_1, Y_1), \\ldots, (x_n, Y_n)\\), we try to fit linear model \\[Y_i = \\beta_0 + \\beta_1 x_i + \\epsilon_i\\] Here \\(\\epsilon_i\\) is a error term, which is a random variable. \\[\\epsilon \\stackrel{iid}{\\sim} (0, \\sigma^2)\\] It gives the problem of estimating three parameters \\((\\beta_0, \\beta_1, \\sigma^2)\\). Before estimating these, we set some assumptions. linear relationship \\(\\epsilon_i\\)s are independent \\(\\epsilon_i\\)s are identically destributed, i.e. constant variance In some setting, \\(\\epsilon_i \\sim N\\) 1.2 Least Squares Estimation Figure 1.2: Idea of the least square estimation We try to find \\(\\beta_0\\) and \\(\\beta_1\\) that minimize the sum of squares of the vertical distances, i.e. \\[\\begin{equation} (\\beta_0, \\beta_1) = \\arg\\min \\sum_{i = 1}^n (Y_i - \\beta_0 - \\beta_1 x_i)^2 \\tag{1.1} \\end{equation}\\] 1.2.1 Normal equations Denote that Equation (1.1) is quadratic. Then we can find its minimum by find the zero point of the first derivative. Set \\[Q(\\beta_0, \\beta_1) := \\sum_{i = 1}^n (Y_i - \\beta_0 - \\beta_1 x_i)^2\\] Then we have \\[\\begin{equation} \\frac{\\partial Q}{\\partial \\beta_0} = -2 \\sum_{i = 1}^n(Y_i - \\beta_0 - \\beta_1 x_i) = 0 \\tag{1.2} \\end{equation}\\] and \\[\\begin{equation} \\frac{\\partial Q}{\\partial \\beta_1} = -2 \\sum_{i = 1}^n (Y_i - \\beta_0 - \\beta_1 x_i)x_i = 0 \\tag{1.3} \\end{equation}\\] From Equation (1.2), \\[\\sum_{i = 1}^n Y_i - n \\hat\\beta_0 - \\hat\\beta_1 \\sum_{i = 1}^n x_i = 0\\] Thus, \\[\\hat\\beta_0 = \\overline{Y} - \\hat\\beta_1 \\overline{x}\\] Equation (1.3) gives \\[\\sum_{i = 1}^n x_i (Y_i - \\overline{Y} + \\hat\\beta_1\\overline{x} - \\hat\\beta_1 x_i) = \\sum_{i = 1}^n x_i(Y_i - \\overline{Y}) - \\hat\\beta_1\\sum_{i = 1}^n x_i (x_i - \\overline{x}) = 0\\] Thus, \\[\\hat\\beta_1 = \\frac{\\sum\\limits_{i = 1}^nx_i(Y_i - \\overline{Y})}{\\sum\\limits_{i = 1}^n x_i (x_i - \\overline{x})}\\] Remark. \\[\\hat\\beta_1 = \\frac{S_{XY}}{S_{XX}}\\] where \\(S_{XX} := \\sum\\limits_{i = 1}^n (x_i - \\overline{x})^2\\) and \\(S_{XY} := \\sum\\limits_{i = 1}^n (x_i - \\overline{x})(Y_i - \\overline{Y})\\) Proof. Note that \\(\\overline{x}^2 = \\frac{1}{n^2}\\bigg(\\sum\\limits_{i = 1}^n x_i\\bigg)^2\\). Then we have \\[\\begin{equation} \\begin{split} S_{XX} &amp; = \\sum_{i = 1}^n (x_i - \\overline{x})^2 \\\\ &amp; = \\sum_{i = 1}^n x_i^2 - 2\\sum_{i = 1}^n x_i \\overline{x} + \\sum_{i = 1}^n\\overline{x}^2 \\\\ &amp; = \\sum_{i = 1}^n x_i^2 - \\frac{2}{n}\\bigg(\\sum\\limits_{i = 1}^n x_i\\bigg)^2 + \\frac{1}{n}\\bigg(\\sum\\limits_{i = 1}^n x_i\\bigg)^2 \\\\ &amp; = \\sum_{i = 1}^n x_i^2 - \\frac{1}{n}\\bigg(\\sum\\limits_{i = 1}^n x_i\\bigg)^2 \\end{split} \\tag{1.4} \\end{equation}\\] It follows that \\[\\begin{equation*} \\begin{split} \\hat\\beta_1 &amp; = \\frac{\\sum x_i(Y_i - \\overline{Y})}{\\sum x_i (x_i - \\overline{x})} \\\\ &amp; = \\frac{\\sum x_i (Y_i - \\overline{Y}) - \\overline{x}\\sum (Y_i - \\overline{Y})}{\\sum x_i^2 - \\frac{1}{n} (\\sum x_i)^2} \\qquad \\because \\sum (Y_i - \\overline{Y}) = 0 \\\\ &amp; = \\frac{\\sum (x_i - \\overline{x})(Y_i - \\overline{Y})}{\\sum x_i^2 - \\frac{1}{n} (\\sum x_i)^2} \\\\ &amp; = \\frac{S_{XY}}{S_{XX}} \\end{split} \\end{equation*}\\] lm(y ~ x, data = delv) Call: lm(formula = y ~ x, data = delv) Coefficients: (Intercept) x 3.32 2.18 1.2.2 Prediction and Mean response “Essentially, all models are wrong, but some are useful.” —George Box Recall that we have assumed the linear assumption between the predictor and the response variables, i.e. the true model. Estimating \\(\\beta_0\\) and \\(\\beta_1\\) is same as estimating the assumed true model. Definition 1.1 (Mean response) \\[E(Y \\mid X = x) = \\beta_0 + \\beta_1 x\\] We can estimate this mean resonse by \\[\\begin{equation} \\widehat{E(Y \\mid x)} = \\hat\\beta_0 + \\hat\\beta_1 x \\tag{1.5} \\end{equation}\\] However, in practice, the model might not be true, which is included in \\(\\epsilon\\) term. \\[Y_i = \\beta_0 + \\beta_1 x_i + \\epsilon_i\\] Our real problem is predicting individual \\(Y\\), not the mean. The prediction of response can be done by \\[\\begin{equation} \\hat{Y_i} = \\hat\\beta_0 + \\hat\\beta_1 x_i \\tag{1.6} \\end{equation}\\] Observe that the values of Equations (1.5) and (1.6) are same. However, due to the error term in the prediction, it has larger standard error. 1.2.3 Properties of LSE Parameters \\(\\beta_0\\) and \\(\\beta_1\\) have some properties related to the expectation and variance. We can notice that these lse’s are unbiased linear estimator. In fact, these are the best unbiased linear estimator. This will be covered in the Gauss-Markov theorem. Lemma 1.1 \\[S_{XX} = \\sum_{i = 1}^n x_i^2 - \\frac{1}{n}\\bigg(\\sum\\limits_{i = 1}^n x_i\\bigg)^2 = \\sum_{i = 1}^n x_i(x_i - \\overline{x})\\] \\[S_{XY} = \\sum_{i = 1}^n x_i Y_i - \\frac{1}{n}\\bigg(\\sum_{i = 1}^n x_i\\bigg)\\bigg(\\sum_{i = 1}^n Y_i\\bigg) = \\sum_{i = 1}^n Y_i(x_i - \\overline{x})\\] Proof. We already proven the first part of \\(S_{XX}\\). See the Equation (1.4). The second part is tivial. Since \\(\\sum (x_i - \\overline{x}) = 0\\), \\[S_{XX} = \\sum_{i = 1}^n (x_i - \\overline{x})^2 = \\sum_{i = 1}^n (x_i - \\overline{x})x_i\\] For the first part of \\(S_{XY}\\), \\[\\begin{equation*} \\begin{split} S_{XY} &amp; = \\sum_{i = 1}^n (x_i - \\overline{x})(Y_i - \\overline{Y}) \\\\ &amp; = \\sum_{i = 1}^n x_i Y_i - \\overline{x} \\sum_{i = 1}^n Y_i - \\overline{Y} \\sum_{i = 1}^n x_i + n \\overline{x} \\overline{Y} \\\\ &amp; = \\sum_{i = 1}^n x_i Y_i - \\frac{1}{n}\\bigg(\\sum_{i = 1}^n x_i\\bigg)\\bigg(\\sum_{i = 1}^n Y_i\\bigg) \\end{split} \\end{equation*}\\] Second part of \\(S_{XY}\\) also can be proven from the definition. \\[\\begin{equation*} \\begin{split} S_{XY} &amp; = \\sum_{i = 1}^n (x_i - \\overline{x})(Y_i - \\overline{Y}) \\\\ &amp; = \\sum_{i = 1}^n Y_i (x_i - \\overline{x}) - \\overline{Y} \\sum_{i = 1}^n (x_i - \\overline{x}) \\\\ &amp; = \\sum_{i = 1}^n Y_i (x_i - \\overline{x}) \\qquad \\because \\sum_{i = 1}^n (x_i - \\overline{x}) = 0 \\end{split} \\end{equation*}\\] Lemma 1.2 (Linearity) Each coefficient is a linear estimator. \\[\\hat\\beta_1 = \\sum_{i = 1}^n\\frac{(x_i - \\overline{x})}{S_{XX}}Y_i\\] \\[\\hat\\beta_0 = \\sum_{i = 1}^n \\bigg( \\frac{1}{n} - \\frac{(x_i - \\overline{x})}{S_{XX}} \\bigg) Y_i\\] Proof. From lemma 1.1, \\[\\begin{equation*} \\begin{split} \\hat\\beta_1 &amp; = \\frac{S_{XY}}{S_{XX}} \\\\ &amp; = \\frac{1}{S_{XX}}\\sum_{i = 1}^n (x_i - \\overline{x}) Y_i \\end{split} \\end{equation*}\\] It gives that \\[\\begin{equation*} \\begin{split} \\hat\\beta_0 &amp; = \\overline{Y} - \\hat\\beta_1 \\overline{x} \\\\ &amp; = \\frac{1}{n}\\sum_{i = 1}^n Y_i - \\overline{x} \\sum_{i = 1}^n\\frac{(x_i - \\overline{x})}{S_{XX}}Y_i \\\\ &amp; = \\sum_{i = 1}^n\\bigg(\\frac{1}{n} - \\frac{(x_i - \\overline{x})\\overline{x}}{S_{XX}} \\bigg)Y_i \\end{split} \\end{equation*}\\] Proposition 1.1 (Unbiasedness) Both coefficients are unbiased. \\(\\text{(a)}\\: E\\hat\\beta_1 = \\beta_1\\) \\(\\text{(b)}\\: E\\hat\\beta_0 = \\beta_0\\) From the model, \\(Y_1, \\ldots, Y_n \\stackrel{indep}{\\sim} (\\beta_0 + \\beta_1 x_i, \\sigma^2)\\). Proof. From lemma 1.1, \\[\\begin{equation*} \\begin{split} E\\hat\\beta_1 &amp; = \\sum_{i = 1}^n \\bigg[ \\frac{(x_i - \\overline{x})}{S_{XX}} E(Y_i) \\bigg] \\\\ &amp; = \\sum_{i = 1}^n \\frac{(x_i - \\overline{x})}{S_{XX}}(\\beta_0 + \\beta_1 x_i) \\\\ &amp; = \\frac{\\beta_1 \\sum (x_i - \\overline{x})x_i}{\\sum (x_i - \\overline{x})x_i} \\qquad \\because \\sum (x_i - \\overline{x}) = 0 \\\\ &amp; = \\beta_1 \\end{split} \\end{equation*}\\] It follows that \\[\\begin{equation*} \\begin{split} E\\hat\\beta_0 &amp; = E(\\overline{Y} - \\hat\\beta_1 \\overline{x}) \\\\ &amp; = E(\\overline{Y}) - \\overline{x}E(\\hat\\beta_1) \\\\ &amp; = E(\\beta_0 + \\beta_1 \\overline{x} + \\overline{\\epsilon}) - \\beta_1 \\overline{x} \\\\ &amp; = \\beta_0 + \\beta_1 \\overline{x} - \\beta_1 \\overline{x} \\\\ &amp; = \\beta_0 \\end{split} \\end{equation*}\\] Proposition 1.2 (Variances) Variances and covariance of coefficients \\(\\text{(a)}\\: Var\\hat\\beta_1 = \\frac{\\sigma^2}{S_{XX}}\\) \\(\\text{(b)}\\: Var\\hat\\beta_0 = \\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg)\\sigma^2\\) \\(\\text{(c)}\\: Cov(\\hat\\beta_0, \\hat\\beta_1) = - \\frac{\\overline{x}}{S_{XX}} \\sigma^2\\) Proof. Proving is just arithmetic. \\[\\begin{equation*} \\begin{split} Var\\hat\\beta_1 &amp; = \\frac{1}{S_{XX}^2}\\sum_{i = 1}^n \\bigg[ (x_i - \\overline{x})^2 Var(Y_i) \\bigg] + \\frac{1}{S_{XX}^2} \\sum_{j \\neq k}^n \\bigg[ (x_j - \\overline{x})(x_k - \\overline{x}) Cov(Y_j, Y_k) \\bigg] \\\\ &amp; = \\frac{\\sigma^2}{S_{XX}} \\qquad \\because Cov(Y_j, Y_k) = 0 \\: \\text{if} \\: j \\neq k \\end{split} \\end{equation*}\\] \\[\\begin{equation*} \\begin{split} Var\\hat\\beta_0 &amp; = \\sum_{i = 1}^n \\bigg( \\frac{1}{n} - \\frac{(x_i - \\overline{x})\\overline{x}}{S_{XX}} \\bigg)^2Var(Y_i) + \\sum_{j \\neq k} \\bigg( \\frac{1}{n} - \\frac{(x_j - \\overline{x})\\overline{x}}{S_{XX}} \\bigg)\\bigg( \\frac{1}{n} - \\frac{(x_k - \\overline{x})\\overline{x}}{S_{XX}} \\bigg) Cov(Y_j, Y_k) \\\\ &amp; = \\frac{\\sigma^2}{n} - 2 \\sigma^2 \\frac{\\overline{x}}{S_{XX}} \\sum_{i = 1}^n (x_i - \\overline{x}) + \\frac{\\sigma^2 \\overline{x}^2 \\sum (x_i - \\overline{x})^2}{S_{XX}^2} \\\\ &amp; = \\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg) \\sigma^2 \\qquad \\because \\sum (x_i - \\overline{x}) = 0 \\end{split} \\end{equation*}\\] \\[\\begin{equation*} \\begin{split} Cov(\\hat\\beta_0, \\hat\\beta_1) &amp; = Cov(\\overline{Y} - \\hat\\beta_1 \\overline{x}, \\hat\\beta_1) \\\\ &amp; = - \\overline{x} Var\\hat\\beta_1 \\\\ &amp; = - \\frac{\\overline{x}}{S_{XX}} \\sigma^2 \\end{split} \\end{equation*}\\] 1.2.4 Gauss-Markov Theorem Chapter 1.2.3 shows that the \\(\\beta_0^{LSE}\\) and \\(\\beta_1^{LSE}\\) are the linear unbiased estimators. Are these good? Good compared to what estimators? Here we consider linear unbiased estimator. If variances in the proposition 1.2 are lower than any parameters in this parameter family, \\(\\beta_0^{LSE}\\) and \\(\\beta_1^{LSE}\\) are the best linear unbiased estimators. Theorem 1.1 (Gauss Markov Theorem) \\(\\hat\\beta_0\\) and \\(\\hat\\beta_1\\) are BLUE, i.e. the best linear unbiased estimator. \\[Var(\\hat\\beta_0) \\le Var\\Big( \\sum_{i = 1}^n a_i Y_i \\Big) \\: \\forall a_i \\in \\mathbb{R} \\: \\text{s.t.} \\: E\\Big( \\sum_{i = 1}^n a_i Y_i \\Big) = \\beta_0\\] \\[Var(\\hat\\beta_1) \\le Var\\Big( \\sum_{i = 1}^n b_i Y_i \\Big) \\: \\forall b_i \\in \\mathbb{R} \\: \\text{s.t.} \\: E\\Big( \\sum_{i = 1}^n b_i Y_i \\Big) = \\beta_1\\] Proof (Bestness of \\(\\beta_1\\)). Consider \\(\\Theta := \\bigg\\{ \\sum\\limits_{i = 1}^n b_i Y_i \\in \\mathbb{R} : E\\Big( \\sum\\limits_{i = 1}^n b_i Y_i \\Big) = \\beta_1 \\bigg\\}\\). Claim: \\(Var( \\sum b_i Y_i) - Var(\\hat\\beta_1) \\ge 0\\) Let \\(\\sum b_i Y_i \\in \\Theta\\). Then \\(E(\\sum b_i Y_i) = \\beta_1\\). Since \\(E(Y_i) = \\beta_0 + \\beta_1 x_i\\), \\[\\beta_0 \\sum b_i + \\beta_1 \\sum b_i x_i = \\beta_1\\] It gives \\[\\begin{equation} \\label{eq:ule} \\begin{cases} \\sum b_i = 0 \\\\ \\sum b_i x_i = 1 \\end{cases} \\end{equation}\\] Then \\[\\begin{equation*} \\begin{split} 0 \\le Var\\Big(\\sum b_i Y_i - \\hat\\beta_1\\Big) &amp; = Var\\Big( \\sum b_i Y_i - \\sum \\frac{(x_i - \\bar{x})}{S_{XX}} Y_i \\Big) \\\\ &amp; \\stackrel{indep}{=} \\sum \\bigg( b_i - \\frac{(x_i - \\bar{x})}{S_{XX}} \\bigg)^2 \\sigma^2 \\\\ &amp; = \\sum \\bigg( b_i^2 - \\frac{2b_i (x_i - \\bar{x})}{S_{XX}} + \\frac{(x_i - \\bar{x})^2}{S_{XX}^2} \\bigg) \\sigma^2 \\\\ &amp; = \\sum b_i^2 \\sigma^2 - \\frac{2 \\sigma^2}{S_{XX}} \\sum b_i x_i + \\frac{2 \\bar{x} \\sigma^2}{S_{XX}} \\sum b_i + \\sigma^2 \\frac{\\sum (x_i - \\bar{x})^2}{S_{XX}^2} \\\\ &amp; = \\sum b_i^2 \\sigma^2 - \\frac{\\sigma^2}{S_{XX}} \\qquad \\because \\eqref{eq:ule} \\:\\text{and}\\: S_{XX} = \\sum (x_i - \\bar{x})^2 \\\\ &amp; = Var(\\sum b_i Y_i) - Var(\\hat\\beta_1) \\end{split} \\end{equation*}\\] Hence, \\[Var(\\sum b_i Y_i) \\ge Var(\\hat\\beta_1)\\] Proof (Bestness of \\(\\beta_0\\)). Consider \\(\\Theta := \\bigg\\{ \\sum\\limits_{i = 1}^n a_i Y_i \\in \\mathbb{R} : E\\Big( \\sum\\limits_{i = 1}^n a_i Y_i \\Big) = \\beta_0 \\bigg\\}\\). Claim: \\(Var( \\sum a_i Y_i) - Var(\\hat\\beta_0) \\ge 0\\) Let \\(\\sum a_i Y_i \\in \\Theta\\). Then \\(E(\\sum a_i Y_i) = \\beta_0\\). Since \\(E(Y_i) = \\beta_0 + \\beta_1 x_i\\), \\[\\beta_0 \\sum a_i + \\beta_1 \\sum a_i x_i = \\beta_0\\] It gives \\[\\begin{equation} \\label{eq:ule0} \\begin{cases} \\sum a_i = 1 \\\\ \\sum a_i x_i = 0 \\end{cases} \\end{equation}\\] Then \\[\\begin{equation*} \\begin{split} 0 \\le Var\\Big(\\sum a_iY_i - \\hat\\beta_0 \\Big) &amp; = Var\\bigg[\\sum a_iY_i - \\sum\\Big( \\frac{1}{n} - \\frac{(x_k - \\bar{x})\\bar{x}}{S_{XX}} \\Big) Y_k \\bigg] \\\\ &amp; = \\sum \\bigg(a_i - \\frac{1}{n} + \\frac{(x_i - \\bar{x})\\bar{x}}{S_{XX}} \\bigg)^2\\sigma^2 \\\\ &amp; = \\sum \\bigg[ a_i^2 - 2a_i\\Big( \\frac{1}{n} - \\frac{(x_i - \\bar{x})\\bar{x}}{S_{XX}} \\Big) + \\Big( \\frac{1}{n} - \\frac{(x_i - \\bar{x})\\bar{x}}{S_{XX}} \\Big)^2 \\bigg]\\sigma^2 \\\\ &amp; = \\sum a_i^2\\sigma^2 -\\frac{2\\sigma^2}{n}\\sum a_i + \\frac{2\\bar{x}\\sigma^2\\sum a_ix_i}{S_{XX}} - \\frac{2\\bar{x}^2\\sigma^2\\sum a_i}{S_{XX}} \\\\ &amp; \\qquad + \\sigma^2\\bigg( \\frac{1}{n} - \\frac{2\\bar{x}}{nS_{XX}} \\sum(x_i - \\bar{x}) + \\frac{\\bar{x}^2\\sum(x_i - \\bar{x})^2}{S_{XX}^2} \\bigg) \\\\ &amp; = \\sum a_i^2\\sigma^2 -\\frac{2\\sigma^2}{n} - \\frac{2\\bar{x}^2\\sigma^2}{S_{XX}} \\qquad \\because \\eqref{eq:ule0} \\\\ &amp; \\qquad + \\bigg(\\frac{1}{n} + \\frac{\\bar{x}^2}{S_{XX}} \\bigg)\\sigma^2 \\qquad \\because \\sum(x_i - \\bar{x}) = 0 \\: \\text{and} \\: S_{XX} := \\sum (x_i - \\bar{x})^2 \\\\ &amp; = \\sum a_i^2\\sigma^2 - \\bigg( \\frac{1}{n} + \\frac{\\bar{x}^2}{S_{XX}} \\bigg)\\sigma^2 \\\\ &amp; = Var\\Big( \\sum a_i Y_i \\Big) - Var\\hat\\beta_0 \\end{split} \\end{equation*}\\] Hence, \\[Var(\\sum a_i Y_i) \\ge Var(\\hat\\beta_0)\\] Example 1.1 Show that \\(\\sum (Y_i - \\hat{Y_i}) = 0\\), \\(\\sum x_i (Y_i - \\hat{Y_i}) = 0\\), and \\(\\sum \\hat{Y_i} (Y_i - \\hat{Y_i}) = 0\\). Solution. Consider the two normal equations (1.2) and (1.3). Note that \\(\\hat{Y_i} = \\hat\\beta_0 + \\hat\\beta_1 x_i\\). From the Equation (1.2), we have \\(\\sum (Y_i - \\hat{Y_i}) = 0\\). From the Equation (1.3), we have \\(\\sum x_i (Y_i - \\hat{Y_i}) = 0\\). It follows that \\[\\begin{equation*} \\begin{split} \\sum \\hat{Y_i} (Y_i - \\hat{Y_i}) &amp; = \\sum (\\hat\\beta_0 + \\hat\\beta_1 x_i) (Y_i - \\hat{Y_i}) \\\\ &amp; = \\hat\\beta_0 \\sum (Y_i - \\hat{Y_i}) + \\hat\\beta_1 \\sum x_i (Y_i - \\hat{Y_i}) \\\\ &amp; = 0 \\end{split} \\end{equation*}\\] 1.2.5 Estimation of \\(\\sigma^2\\) There is the last parameter, \\(\\sigma^2 = Var(Y_i)\\). In the least squares estimation literary, we estimate \\(\\sigma^2\\) by \\[\\begin{equation} \\hat\\sigma^2 = \\frac{1}{n - 2} \\sum_{i = 1}^n (Y_i - \\hat\\beta_0 - \\hat\\beta_1 x_i)^2 \\tag{1.7} \\end{equation}\\] Why \\(n - 2\\)? This makes the estimator unbiased. Proposition 1.3 (Unbiasedness) \\[E(\\hat\\sigma^2) = \\sigma^2\\] Proof. Note that \\[(Y_i - \\hat\\beta_0 - \\hat\\beta_1 x_i) = (Y_i - \\overline{Y}) - \\hat\\beta_1(x_i - \\overline{x})\\] Then \\[\\begin{equation*} \\begin{split} E(\\hat\\sigma^2) &amp; = \\frac{1}{n - 2} E \\bigg[ \\sum (Y_i - \\hat\\beta_0 - \\hat\\beta_1 x_i)^2 \\bigg] \\\\ &amp; = \\frac{1}{n - 2} E \\bigg[ \\sum (Y_i - \\overline{Y})^2 + \\hat\\beta_1^2 \\sum (x_i - \\overline{x})^2 -2\\hat\\beta_1 \\sum (Y_i - \\overline{Y})(x_i - \\overline{x}) \\bigg] \\\\ &amp; = \\frac{1}{n - 2} E ( S_{YY} + \\hat\\beta_1^2 S_{XX} - 2 \\hat\\beta_1 S_{XY}) \\\\ &amp; = \\frac{1}{n - 2} E ( S_{YY} - \\hat\\beta_1^2 S_{XX}) \\qquad \\because S_{XY} = \\hat\\beta_1 S_{XX} \\\\ &amp; = \\frac{1}{n - 2} \\Big( \\underset{(a)}{\\underline{ES_{YY}}} - S_{XX} \\underset{(b)}{\\underline{E\\hat\\beta_1^2}} \\Big) \\end{split} \\end{equation*}\\] \\[\\begin{equation*} \\begin{split} ES_{YY} &amp; = E\\Big[ \\sum (Y_i - \\overline{Y})^2 \\Big] \\\\ &amp; = E \\Big[ \\sum \\Big( (\\beta_0 + \\beta_1 x_i + \\epsilon_i) - (\\beta_0 + \\beta_1 \\overline{x} + \\overline{\\epsilon}) \\Big)^2 \\Big] \\\\ &amp; = E \\Big[ \\sum \\Big( \\beta_1 (x_i - \\overline{x}) + (\\epsilon_i - \\overline{\\epsilon}) \\Big)^2 \\Big] \\\\ &amp; = \\beta_1^2 S_{XX} + E\\Big( \\sum (\\epsilon_i - \\overline{\\epsilon})^2 \\Big) + 2\\beta_1 \\sum (x_i - \\overline{x}) E(\\epsilon_i - \\overline{\\epsilon}) \\\\ &amp; = \\beta_1^2 S_{XX} + E\\Big( \\sum (\\epsilon_i - \\overline{\\epsilon})^2 \\Big) \\end{split} \\end{equation*}\\] Since \\(E(\\bar\\epsilon) = 0\\) and \\(Var(\\bar\\epsilon) = \\frac{\\sigma^2}{n}\\), \\[\\begin{equation*} \\begin{split} E\\Big( \\sum (\\epsilon_i - \\overline{\\epsilon})^2 \\Big) &amp; = E \\Big( \\sum (\\epsilon_i^2 + \\bar\\epsilon^2 - 2\\epsilon_i \\bar\\epsilon) \\Big) \\\\ &amp; = \\sum E(\\epsilon_i^2) - n E(\\bar\\epsilon^2) \\qquad \\because \\sum \\epsilon = n \\bar\\epsilon \\\\ &amp; = \\sum (Var(\\epsilon_i) + E(\\epsilon_i)^2) - n(Var(\\bar\\epsilon) + E(\\bar\\epsilon)^2) \\\\ &amp; = n\\sigma^2 - \\sigma^2 \\\\ &amp; = (n - 1)\\sigma^2 \\end{split} \\end{equation*}\\] Thus, \\[ES_{YY} = \\beta_1^2 S_{XX} + (n - 1)\\sigma^2\\] \\[\\begin{equation*} \\begin{split} E\\hat\\beta_1^2 &amp; = Var\\hat\\beta_1 + E(\\hat\\beta_1)^2 \\\\ &amp; = \\frac{\\sigma^2}{S_{XX}} + \\beta_1^2 \\end{split} \\end{equation*}\\] It follows that \\[\\begin{equation*} \\begin{split} E(\\hat\\sigma^2) &amp; = \\frac{1}{n - 2} \\Big( \\underset{(a)}{\\underline{ES_{YY}}} - S_{YY} \\underset{(b)}{\\underline{E\\hat\\beta_1^2}} \\Big) \\\\ &amp; = \\frac{1}{n - 2} \\bigg( \\Big(\\beta_1^2 S_{XX} + (n - 1)\\sigma^2 \\Big) - S_{XX}\\Big(\\frac{\\sigma^2}{S_{XX}} + \\beta_1^2 \\Big) \\bigg) \\\\ &amp; = \\frac{1}{n - 2}((n - 2)\\sigma^2) \\\\ &amp; = \\sigma^2 \\end{split} \\end{equation*}\\] 1.3 Maximum Likelihood Estimation In this section, we add an assumption to an random errors \\(\\epsilon_i\\). \\[\\epsilon_i \\stackrel{iid}{\\sim} N(0, \\sigma^2)\\] Example 1.2 (Gaussian Likelihood) Note that \\(Y_i \\stackrel{indep}{\\sim} N(\\beta_0 + \\beta_1 x_i, \\sigma^2)\\). Then the likelihood function is \\[L(\\beta_0, \\beta_1, \\sigma^2) = \\prod_{i = 1}^n\\bigg( \\frac{1}{\\sqrt{2\\pi\\sigma^2}} \\exp \\bigg(- \\frac{(Y_i - \\beta_0 - \\beta_1 x_i)^2}{2 \\sigma^2} \\bigg) \\bigg)\\] and so the log-likelihood function can be computed as \\[l(\\beta_0, \\beta_1, \\sigma^2) = -\\frac{n}{2}\\ln(2\\pi\\sigma^2) - \\frac{1}{2\\sigma^2}\\sum_{i = 1}^n(Y_i - \\beta_0 - \\beta_1 x_i)^2\\] 1.3.1 Likelihood equations Definition 1.2 (Maximum Likelihood Estimator) \\[(\\hat\\beta_0^{MLE}, \\hat\\beta_1^{MLE}, \\hat\\sigma^{2MLE}) := \\arg\\sup L(\\beta_0, \\beta_1, \\sigma^2)\\] Since \\(l(\\cdot) = \\ln L(\\cdot)\\) is monotone, Remark. \\[(\\hat\\beta_0^{MLE}, \\hat\\beta_1^{MLE}, \\hat\\sigma^{2MLE}) = \\arg\\sup l(\\beta_0, \\beta_1, \\sigma^2)\\] We can find the maximum of this quadratic function by making first derivative. \\[\\begin{equation} \\frac{\\partial l}{\\partial \\beta_0} = \\frac{1}{\\sigma^2} \\sum_{i = 1}^n (Y_i - \\beta_0 - \\beta_1 x_i) = 0 \\tag{1.8} \\end{equation}\\] \\[\\begin{equation} \\frac{\\partial l}{\\partial \\beta_1} = \\frac{1}{\\sigma^2} \\sum_{i = 1}^n x_i (Y_i - \\beta_0 - \\beta_1 x_i) = 0 \\tag{1.9} \\end{equation}\\] \\[\\begin{equation} \\frac{\\partial l}{\\partial \\sigma^2} = - \\frac{n}{2\\sigma^2} + \\frac{1}{2\\sigma^4} \\sum_{i = 1}^n (Y_i - \\beta_0 - \\beta_1 x_i)^2 = 0 \\tag{1.10} \\end{equation}\\] Denote that Equations (1.8) and (1.9) given \\(\\hat\\sigma^2\\) are equivalent to the normal equations. Thus, \\[\\hat\\beta_0^{MLE} = \\hat\\beta_0^{LSE}, \\quad \\hat\\beta_1^{MLE} = \\hat\\beta_1^{LSE}\\] From Equation (1.10), \\[\\hat\\sigma^{2MLE} = \\frac{1}{n}\\sum_{i = 1}^n(Y_i - \\beta_0 - \\beta_1 x_i)^2 = \\frac{n - 2}{n} \\hat\\sigma^{2LSE}\\] While \\(\\hat\\sigma^{2LSE}\\) is an unbiased, above MLE is not an unbiased estimator. Since \\(\\hat\\sigma^{2MLE} \\approx \\hat\\sigma^{2LSE}\\) for large \\(n\\), howerver, it is asymptotically unbiased. Theorem 1.2 (Rao-Cramer Lower Bound, univariate case) Let \\(X_1, \\ldots, X_n \\stackrel{iid}{\\sim} f(x ; \\theta)\\). If \\(\\hat\\theta\\) is an unbiased estimator of \\(\\theta\\), \\[Var(\\hat\\theta) \\ge \\frac{1}{I_n(\\theta)}\\] where \\(I_n(\\theta) = -E\\bigg(\\frac{\\partial^2 l(\\theta)}{\\partial \\theta^2} \\bigg)\\) To apply this theorem 1.2 in the simple linear regression setting, i.e. \\((\\beta_0, \\beta_1)\\), we need to look at the bivariate case. Theorem 1.3 (Rao-Cramer Lower Bound, bivariate case) Let \\(X_1, \\ldots, X_n \\stackrel{iid}{\\sim} f(x ; \\theta1, \\theta_2)\\) and let \\(\\boldsymbol{\\theta} = (\\theta_1, \\theta_2)^T\\). If each \\(\\hat\\theta_1\\), \\(\\hat\\theta_2\\) is an unbiased estimator of \\(\\theta_1\\) and \\(\\theta_2\\), then \\[ Var(\\boldsymbol{\\theta}) := \\begin{bmatrix} Var(\\hat\\theta_1) &amp; Cov(\\hat\\theta_1, \\hat\\theta_2) \\\\ Cov(\\hat\\theta_1, \\hat\\theta_2) &amp; Var(\\hat\\theta_2) \\end{bmatrix} \\ge I_n^{-1}(\\theta_1, \\theta_2) \\] where \\[ I_n(\\theta_1, \\theta_2) = - \\begin{bmatrix} E\\bigg( \\frac{\\partial^2 l(\\theta_1, \\theta_2)}{\\partial \\theta_1^2} \\bigg) &amp; E\\bigg( \\frac{\\partial^2 l(\\theta_1, \\theta_2)}{\\partial \\theta_1 \\partial \\theta_2} \\bigg) \\\\ E\\bigg( \\frac{\\partial^2 l(\\theta_1, \\theta_2)}{\\partial \\theta_1 \\partial \\theta_2} \\bigg) &amp; E\\bigg( \\frac{\\partial^2 l(\\theta_1, \\theta_2)}{\\partial \\theta_2^2} \\bigg) \\end{bmatrix} \\] Assume that \\(\\sigma^2\\) is known. From the Equations (1.8) and (1.9), \\[ \\begin{cases} \\frac{\\partial^2 l}{\\partial \\beta_0^2} = - \\frac{n}{\\sigma^2} \\\\ \\frac{\\partial^2 l}{\\partial \\beta_1^2} = - \\frac{\\sum x_i^2}{\\sigma^2} \\\\ \\frac{\\partial^2 l}{\\partial \\beta_0 \\partial \\beta_1} = - \\frac{\\sum x_i}{\\sigma^2} \\end{cases} \\] Thus, \\[ I_n(\\beta_0, \\beta_1) = \\begin{bmatrix} \\frac{n}{\\sigma^2} &amp; \\frac{\\sum x_i}{\\sigma^2} \\\\ \\frac{\\sum x_i}{\\sigma^2} &amp; \\frac{\\sum x_i^2}{\\sigma^2} \\end{bmatrix} \\] Applying gaussian elimination, \\[\\begin{equation*} \\begin{split} \\left[ \\begin{array}{cc|cc} \\frac{n}{\\sigma^2} &amp; \\frac{\\sum x_i}{\\sigma^2} &amp; 1 &amp; 0 \\\\ \\frac{\\sum x_i}{\\sigma^2} &amp; \\frac{\\sum x_i^2}{\\sigma^2} &amp; 0 &amp; 1 \\end{array} \\right] &amp; \\leftrightarrow \\left[ \\begin{array}{cc|cc} \\frac{n}{\\sigma^2} &amp; \\frac{\\sum x_i}{\\sigma^2} &amp; 1 &amp; 0 \\\\ \\frac{\\sum x_i}{\\sigma^2}\\Big(\\frac{n}{\\sum x_i} \\Big) &amp; \\frac{\\sum x_i^2}{\\sigma^2}\\Big(\\frac{n}{\\sum x_i} \\Big) &amp; 0 &amp; \\frac{1}{\\overline{x}} \\end{array} \\right] \\\\ &amp; \\leftrightarrow \\left[ \\begin{array}{cc|cc} \\frac{n}{\\sigma^2} &amp; \\frac{\\sum x_i}{\\sigma^2} &amp; 1 &amp; 0 \\\\ 0 &amp; \\frac{\\sum x_i^2 - \\overline{x}\\sum x_i}{\\sigma^2\\overline{x}} = \\frac{S_{XX}}{\\sigma^2\\overline{x}} &amp; -1 &amp; \\frac{1}{\\overline{x}} \\end{array} \\right] \\\\ &amp; \\leftrightarrow \\left[ \\begin{array}{cc|cc} 1 &amp; \\overline{x} &amp; \\frac{\\sigma^2}{n} &amp; 0 \\\\ 0 &amp; 1 &amp; -\\frac{\\overline{x}}{S_{XX}}\\sigma^2 &amp; \\frac{\\sigma^2}{S_{XX}} \\end{array} \\right] \\\\ &amp; \\leftrightarrow \\left[ \\begin{array}{cc|cc} 1 &amp; 0 &amp; \\bigg(\\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg)\\sigma^2 &amp; -\\frac{\\overline{x}}{S_{XX}}\\sigma^2 \\\\ 0 &amp; 1 &amp; -\\frac{\\overline{x}}{S_{XX}}\\sigma^2 &amp; \\frac{\\sigma^2}{S_{XX}} \\end{array} \\right] \\end{split} \\end{equation*}\\] Hence, \\[ I_n^{-1}(\\beta_0, \\beta_1) = \\begin{bmatrix} \\bigg(\\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg)\\sigma^2 &amp; -\\frac{\\overline{x}}{S_{XX}}\\sigma^2 \\\\ -\\frac{\\overline{x}}{S_{XX}}\\sigma^2 &amp; \\frac{\\sigma^2}{S_{XX}} \\end{bmatrix} = \\begin{bmatrix} Var(\\hat\\beta_0) &amp; Cov(\\hat\\beta_0, \\hat\\beta_1) \\\\ Cov(\\hat\\beta_0, \\hat\\beta_1) &amp; Var(\\hat\\beta_1) \\end{bmatrix} \\] Since \\(Var(\\boldsymbol{\\hat\\beta}) - I^{-1} = 0\\) is non-negative definite, each \\(Var(\\hat\\beta_0) = \\bigg(\\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg)\\sigma^2\\) and \\(Var(\\hat\\beta_1) = \\frac{\\sigma^2}{S_{XX}}\\) is a theoretical bound. Remark. This says that \\(\\hat\\beta_0^{LSE} = \\hat\\beta_0^{MLE}\\) and \\(\\hat\\beta_1^{LSE} = \\hat\\beta_1^{MLE}\\) have the smallest variance among all unbiased estimator. This result is stronger than Gauss-Markov theorem 1.1, where the LSE has the smalleset variance among all linear unbiased estimators. It can be simply obtained from the Lehmann-Scheffe Theorem: If some unbiased estimator is a function of complete sufficient statistic, then this estimator is the unique MVUE (Hogg, McKean, and Craig 2018). Remark (Lehmann and Scheffe for regression coefficients). \\(u\\Big(\\sum Y_i, S_{XY} \\Big)\\) is CSS in this regression problem, i.e. known \\(\\sigma^2\\). Proof. From the example 1.2, \\[\\begin{equation*} \\begin{split} L(\\beta_0, \\beta_1) &amp; = (2\\pi\\sigma^2)^{-\\frac{n}{2}}\\exp\\bigg[-\\frac{1}{2\\sigma^2} \\sum(Y_i - \\beta_0 - \\beta_1 x_i)^2 \\bigg] \\\\ &amp; = (2\\pi\\sigma^2)^{-\\frac{n}{2}}\\exp\\bigg[-\\frac{1}{2\\sigma^2} \\sum \\Big(Y_i^2 - (\\beta_0 + \\beta_1 x_i)Y_i + (\\beta_0 + \\beta_1 x_i)^2 \\Big) \\bigg] \\\\ &amp; = (2\\pi\\sigma^2)^{-\\frac{n}{2}}\\exp\\bigg[-\\frac{1}{2\\sigma^2} \\Big( -\\beta_0 \\sum Y_i - \\beta_1 \\sum x_i Y_i \\Big) \\bigg] \\exp\\bigg[-\\frac{1}{2\\sigma^2} \\Big( \\sum Y_i^2 + (\\beta_0 + \\beta_1 x_i)^2 \\Big) \\bigg] \\end{split} \\end{equation*}\\] By the Factorization theorem, both \\(\\sum Y_i\\) and \\(\\sum x_i Y_i\\) are sufficient statistics. Since \\(S_{XY}\\) is one-to-one function of \\(\\sum x_i Y_i\\), it is also a sufficient statistic. Denote that the normal distribution is in exponential family. Hence, \\((\\sum Y_i, S_{XY})\\) are CSS. 1.4 Residuals Definition 1.3 (Residuals) \\[e_i := Y_i - \\hat{Y_i}\\] 1.4.1 Prediction error delv %&gt;% mutate(yhat = predict(lm(y ~ x))) %&gt;% ggplot(aes(x = x, y = y)) + geom_smooth(method = &quot;lm&quot;, se = FALSE) + geom_point() + geom_linerange(aes(ymin = y, ymax = yhat), col = I(&quot;red&quot;), alpha = .7) + labs( x = &quot;Number of Cases&quot;, y = &quot;Delivery Time&quot; ) Figure 1.3: Fit and residuals See Figure 1.3. Each red line is \\(e_i\\). As we can see, \\(e_i\\) represents the difference between observed response and predicted response. A large \\(\\lvert e_i \\rvert\\) indicates a large prediction error. You can call this \\(e_i\\) for each \\(Y_i\\) by lm()$residuals or residuals(). delv_fit &lt;- lm(y ~ x, data = delv) delv_fit$residuals 1 2 3 4 5 6 7 8 9 10 -1.874 1.651 2.181 2.855 -2.628 -0.444 0.327 -0.724 10.634 7.298 11 12 13 14 15 16 17 18 19 20 2.191 -4.082 1.475 3.372 1.094 3.918 -1.028 0.446 -0.349 -5.216 21 22 23 24 25 -7.182 -7.581 -4.156 -0.900 -1.275 \\(\\sum e_i^2\\), which has been minimized in the procedure of LSE, can be used to see overall size of prediction errors. Definition 1.4 (Residual Sum of Squares) \\[SSE := \\sum_{i = 1}^n e_i^2\\] 1.4.2 Residuals and the variance \\(e_i\\) is a random quantity, which contains the information for \\(\\epsilon_i\\). \\(\\sum e_i^2\\) can give information about \\(\\sigma^2 = Var(\\epsilon_i)\\). For this, it is expected that \\(e_i\\) and \\(\\epsilon_i\\) have similar feature. Lemma 1.3 Covriance between Y and each coefficient \\(\\text{(a)}\\: Cov(\\hat\\beta_0, Y_i) = \\bigg( \\frac{1}{n} - \\frac{(x_i - \\overline{x})\\overline{x}}{S_{XX}} \\bigg)\\sigma^2\\) \\(\\text{(b)}\\: Cov(\\hat\\beta_1, Y_i) = \\frac{(x_i - \\overline{x})}{S_{XX}}\\sigma^2\\) Proof. (a) \\[\\begin{equation*} \\begin{split} Cov(\\hat\\beta_0, Y_i) &amp; = Cov(\\sum a_i Y_i, Y_i) \\\\ &amp; = \\bigg( \\frac{1}{n} - \\frac{(x_i - \\overline{x})\\overline{x}}{S_{XX}} \\bigg)\\sigma^2 \\end{split} \\end{equation*}\\] \\[\\begin{equation*} \\begin{split} Cov(\\hat\\beta_1, Y_i) &amp; = Cov(\\sum b_i Y_i, Y_i) \\\\ &amp; = \\frac{(x_i - \\overline{x})}{S_{XX}}\\sigma^2 \\end{split} \\end{equation*}\\] Proposition 1.4 (Properties of residuals) Mean and variance of the residual \\(\\text{(a)}\\: E(e_i) = 0\\) \\(\\text{(b)}\\: Var(e_i) \\neq \\sigma^2\\) \\(\\text{(c)}\\: \\forall i \\neq j : Cov(e_i, e_j) \\neq 0\\) Proof. (a) Recall that this is the assumption of the regression model. Lemma 1.3 implies that \\[\\begin{equation*} \\begin{split} Cov(\\overline{Y}, \\hat\\beta_1) &amp; = Cov(\\frac{1}{n}\\sum Y_i, \\hat\\beta_1) \\\\ &amp; = \\frac{1}{n} \\sum_{i = 1}^n \\frac{(x_i - \\overline{x})}{S_{XX}}\\sigma^2 \\\\ &amp; = 0 \\qquad \\because \\sum (x_i - \\overline{x}) = 0 \\end{split} \\end{equation*}\\] Then \\[\\begin{equation} \\begin{split} Var(\\hat{Y_i}) &amp; = Var(\\hat\\beta_0 + \\hat\\beta_1 x_i) \\\\ &amp; = Var \\bigg[ \\overline{Y} + (x_i - \\overline{x}) \\hat\\beta_1 \\bigg] \\qquad \\because \\hat\\beta_0 = \\overline{Y} - \\hat\\beta_1 \\overline{x} \\\\ &amp; = Var(\\overline{Y}) + (x_i - \\overline{x})^2 Var(\\hat\\beta_1) + 2(x_i - \\overline{x}) Cov(\\overline{Y}, \\hat\\beta_1) \\\\ &amp; = \\frac{\\sigma^2}{n} + (x_i - \\overline{x})^2\\frac{\\sigma^2}{S_{XX}} + 0 \\\\ &amp; = \\bigg( \\frac{1}{n} + \\frac{(x_i - \\overline{x})^2}{S_{XX}} \\bigg)\\sigma^2 \\end{split} \\tag{1.11} \\end{equation}\\] From the same lemma 1.3, \\[\\begin{equation} \\begin{split} Cov(Y_i, \\hat{Y_i}) &amp; = Cov(Y_i, \\overline{Y} + (x_i - \\overline{x}) \\hat\\beta_1) \\\\ &amp; = Cov(Y_i, \\overline{Y}) + (x_i - \\overline{x}) Cov(Y_i, \\hat\\beta_1) \\\\ &amp; = \\frac{\\sigma^2}{n} + \\frac{(x_i - \\overline{x})^2}{S_{XX}}\\sigma^2 \\qquad \\because Cov(Y_i, \\hat\\beta_1) = \\frac{(x_i - \\overline{x})}{S_{XX}}\\sigma^2 \\\\ &amp; = \\bigg( \\frac{1}{n} + \\frac{(x_i - \\overline{x})^2}{S_{XX}} \\bigg)\\sigma^2 \\end{split} \\tag{1.12} \\end{equation}\\] These Equations (1.11) and (1.12) give that \\[\\begin{equation} \\begin{split} Var(e_i) &amp; = Var(Y_i) + Var(\\hat{Y_i}) -2Cov(Y_i, \\hat{Y_i}) \\\\ &amp; = \\sigma^2 + \\bigg( \\frac{1}{n} + \\frac{(x_i - \\overline{x})^2}{S_{XX}} \\bigg)\\sigma^2 - 2 \\bigg( \\frac{1}{n} + \\frac{(x_i - \\overline{x})^2}{S_{XX}} \\bigg)\\sigma^2 \\\\ &amp; = \\bigg(1 - \\frac{1}{n} - \\frac{(x_i - \\overline{x})^2}{S_{XX}} \\bigg)\\sigma^2 \\\\ &amp; \\neq \\sigma^2 \\end{split} \\tag{1.13} \\end{equation}\\] Let \\(i \\neq j\\). Then \\[\\begin{equation*} \\begin{split} Cov(e_i, e_j) &amp; = Cov\\Big( Y_i - (\\hat\\beta_0 + \\hat\\beta_1 x_i), Y_j - (\\hat\\beta_0 + \\hat\\beta_1 x_j) \\Big) \\\\ &amp; = Cov(Y_i, Y_j) - Cov\\Big(Y_i, (\\hat\\beta_0 + \\hat\\beta_1 x_j) \\Big) - Cov((\\hat\\beta_0 + \\hat\\beta_1 x_i), Y_j) + Cov((\\hat\\beta_0 + \\hat\\beta_1 x_i), (\\hat\\beta_0 + \\hat\\beta_1 x_j)) \\\\ &amp; = 0 - \\bigg( \\frac{1}{n} - \\frac{(x_i - \\overline{x})\\overline{x}}{S_{XX}} \\bigg)\\sigma^2 - \\frac{(x_i - \\overline{x})x_j}{S_{XX}}\\sigma^2 \\\\ &amp; \\qquad - \\bigg( \\frac{1}{n} - \\frac{(x_j - \\overline{x})\\overline{x}}{S_{XX}} \\bigg)\\sigma^2 - \\frac{(x_i - \\overline{x})x_i}{S_{XX}}\\sigma^2 \\\\ &amp; \\qquad + \\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2 + x_i x_j - \\overline{x}(x_i + x_j)}{S_{XX}} \\bigg)\\sigma^2 \\\\ &amp; = - \\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2 + x_i x_j - \\overline{x}(x_i + x_j)}{S_{XX}} \\bigg)\\sigma^2 \\\\ &amp; = - \\bigg( \\frac{1}{n} + \\frac{(x_i - \\overline{x})(x_j - \\overline{x})}{S_{XX}} \\bigg)\\sigma^2 \\\\ &amp; \\neq 0 \\end{split} \\end{equation*}\\] 1.5 Decomposition of Total Variability 1.5.1 Total sum of squares Definition 1.5 (Uncorrected Total Sum of Squares) \\[SST_{uncor} := \\sum_{i = 1}^n Y_i^2\\] Definition 1.6 (Corrected Total Sum of Squares) \\[SST := \\sum_{i = 1}^n (Y_i - \\overline{Y})^2\\] What does this total sum of squares mean? To know this, we should know \\(\\overline{Y}\\) first. delv %&gt;% ggplot(aes(x = x, y = y)) + geom_smooth(method = &quot;lm&quot;, formula = y ~ 1, se = FALSE) + geom_point() + labs( x = &quot;Number of Cases&quot;, y = &quot;Delivery Time&quot; ) Figure 1.4: Regression without predictor See Figure 1.4. The line represents the closest line when we use only intercept term for the regression model. In other words, if we use no information for the response, i.e. no predictor variables, we will get just average of the response variable. Consider \\[Y_i = \\beta_0 + \\epsilon_i\\] Then we can get only one normal equation \\[\\sum (Y_i - \\hat\\beta_0) = 0\\] Hence, \\[\\hat\\beta_0 = \\frac{1}{n} \\sum_{i = 1}^n Y_i \\equiv \\overline{Y}\\] From this fact, \\(SST\\) implies total variance. 1.5.2 Regression sum of squares Definition 1.7 (Regression Sum of Squares) \\[SSR := \\sum_{i = 1}^n (\\hat{Y_i} - \\overline{Y})^2\\] This \\(SSR\\) compares \\(\\hat{Y_i}\\) versus \\(\\overline{Y}\\), computing the sum of squares for difference between predicted values from regression model and model not using predictors. 1.5.3 Residual sum of squares Now consider the residual sum of squares \\(SSE\\) in the definition 1.4. As mentioned, this is related to the prediction errors, which the regression model could not explain the data. 1.5.4 Decomposition of total sum of squares \\(SST\\) can be decomposed by construction of sum of squares. Proposition 1.5 (Decomposition of SST) \\[SST = SSR + SSE\\] where \\(SST = \\sum (Y_i - \\overline{Y})^2\\), \\(SSR = \\sum (\\hat{Y_i} - \\overline{Y})^2\\), and \\(SSE = \\sum (Y_i - \\hat{Y_i})\\) Proof. From the Example 1.1, \\[\\begin{equation*} \\begin{split} \\sum_{i = 1}^n (Y_i - \\overline{Y})^2 &amp; = \\sum_{i = 1}^n (Y_i - \\hat{Y_i} + \\hat{Y_i} - \\overline{Y})^2 \\\\ &amp; = \\sum_{i = 1}^n (Y_i - \\hat{Y_i})^2 + 2 \\sum_{i = 1}^n (Y_i - \\hat{Y_i})(\\hat{Y_i} - \\overline{Y}) + \\sum_{i = 1}^n (\\hat{Y_i} - \\overline{Y})^2 \\\\ &amp; = \\sum_{i = 1}^n (Y_i - \\hat{Y_i})^2 + \\sum_{i = 1}^n (\\hat{Y_i} - \\overline{Y})^2 \\qquad \\because \\sum (Y_i - \\hat{Y_i}) = 0 \\: \\text{and} \\: \\sum (Y_i - \\hat{Y_i})\\hat{Y_i} = 0 \\end{split} \\end{equation*}\\] This represents each \\(SSR\\) and \\(SSE\\) divides total variability as following. \\[\\overset{SST}{\\text{total variability}} = \\overset{SSR}{\\text{explained by regression}} + \\overset{SSE}{\\text{left unexplained by regression}}\\] Denote that the total variability \\(SST\\) is constant given data set. If our model is good, \\(SSR\\) grows and \\(SSE\\) flattens. Thus the larger \\(SSR\\) is, the better. The lower \\(SSE\\) is, the better. 1.5.5 Coefficient of determination We have discussed in the previous section 1.5.4 that \\(SSR\\) and \\(SSE\\) splits the total variability into explained part and not-explained part by our regression model. Our first interest is whether the model works well for the data well, so we can think about the proportion of explained part to the total variance. The following measure \\(R^2\\) computes this kind of value. Definition 1.8 (Coefficient of Determination) \\[R^2 := \\frac{SSR}{SST} = 1 - \\frac{1 - SSE}{SST}\\] By construction, \\[0 \\le R^2 \\le 1\\] As \\(R^2\\) goes to \\(0\\), the model goes wrong. As \\(R^2\\) is close to \\(1\\), large proportion of variability has been explained. So we prefer large values rather than small. Proposition 1.6 \\(R^2\\) shows the strength of linear relation between two variables \\(x\\) and \\(Y\\) in the simple linear regression. \\[R^2 = \\hat\\rho_{XY}\\] where \\(\\hat\\rho_{XY} := \\frac{\\sum (X_i - \\overline{X})(Y_i - \\overline{Y})}{\\sqrt{\\sum (X_i - \\overline{X})^2} \\sqrt{\\sum (Y_i - \\overline{Y})^2}}\\) is the sample correlation coefficients Proof. Note that \\(\\hat{Y_i} - \\overline{Y} = \\hat\\beta_1 (x_i - \\overline{x}) = \\frac{S_{XY}}{S_{XX}} (x_i - \\overline{x})\\). Then \\[\\begin{equation*} \\begin{split} \\sum (\\hat{Y_i} - \\overline{Y})^2 &amp; = \\frac{S_{XY}^2}{S_{XX}^2} \\sum (x_i - \\overline{x})^2 \\\\ &amp; = \\frac{S_{XY}^2}{S_{XX}} \\end{split} \\end{equation*}\\] It follows that \\[\\begin{equation*} \\begin{split} R^2 &amp; = \\frac{\\sum (\\hat{Y_i} - \\overline{Y})^2}{\\sum (Y_i - \\overline{Y})^2} \\\\ &amp; = \\frac{S_{XY}^2}{S_{XX}S_{YY}} \\\\ &amp; =: \\hat\\rho_{XY}^2 \\end{split} \\end{equation*}\\] In this relation, we can know that \\(R^2\\) statistic performs as a measure of the linear relationship in the simple linear regression setting. 1.6 Geometric Interpretations 1.6.1 Fundamental subspaces These linear algebra concepts might be more useful for multiple linear regression, but let’s briefly recap (Leon 2014). Definition 1.9 (Fundamental Subspaces) Let \\(X \\in \\mathbb{R}^{n \\times (p + 1)}\\). Then the Null space is defined by \\[N(X) := \\{ \\mathbf{b} \\in \\mathbb{R}^n \\mid X\\mathbf{b} = \\mathbf{0} \\}\\] The Row space is defined by \\[Row(X) := sp(\\{\\mathbf{r}_1, \\ldots, \\mathbf{r}_{p + 1} \\}) \\quad \\text{where} \\: X^T = [\\mathbf{r}_1^T, \\ldots, \\mathbf{r}_{n}^T]\\] The Column space is defined by \\[Col(X) := sp(\\{\\mathbf{c}_1, \\ldots, \\mathbf{c}_{n} \\}) \\quad \\text{where} \\: X = [\\mathbf{c}_1, \\ldots, \\mathbf{c}_{p + 1}]\\] The Range of \\(X\\) is defined by \\[R(X) := \\{ \\mathbf{y} \\in \\mathbb{R}^n \\mid \\mathbf{y} = X\\mathbf{b} \\quad \\text{for some} \\: \\mathbf{b} \\in \\mathbb{R}^{p + 1} \\}\\] These spaces have some constructional relationship. Theorem 1.4 (Fundamental Subspaces Theorem) Let \\(X \\in \\mathbb{R}^{n \\times (p + 1)}\\). Then \\[N(X) = R(X^T)^{\\perp} = Col(X^T)^{\\perp} = Row(X)^{\\perp}\\] Transposed matrix also satisfy this. \\[N(X^T) = R(X)^{\\perp} = Col(X)^{\\perp}\\] Proof. Let \\(\\mathbf{a} \\in N(X)\\). Then \\(X\\mathbf{a} = \\mathbf{0}\\). Let \\(\\mathbf{y} \\in R(X^T)\\). Then \\(X^T \\mathbf{b} = \\mathbf{y}\\) for some \\(\\mathbf{b} \\in \\mathbb{R}^{p + 1}\\). Choose \\(\\mathbf{b} \\in \\mathbb{R}^{p + 1}\\) such that \\(X^T \\mathbf{b} = \\mathbf{y}\\). Then \\[\\begin{equation*} \\begin{split} \\mathbf{0} &amp; = X\\mathbf{a} \\\\ &amp; = \\mathbf{b}^T X\\mathbf{a} \\\\ &amp; = \\mathbf{y}^T \\mathbf{a} \\end{split} \\end{equation*}\\] Hence, \\[N(X) \\perp R(X^T)\\] Since \\[X^T \\mathbf{b} = \\mathbf{c}_1 \\mathbf{b} + \\cdots + \\mathbf{c}_{p + 1} \\mathbf{b}\\] it is trivial that \\(R(X) = Col(X)\\) and \\(R(X^T) = Col(X^T)\\). If \\(\\mathbf{a} \\in N(X)\\), then \\[ X\\mathbf{a} = \\begin{bmatrix} \\mathbf{r}_1 \\\\ \\mathbf{r}_2 \\\\ \\cdots \\\\ \\mathbf{r}_n \\end{bmatrix} \\begin{bmatrix} a_1 \\\\ \\cdots \\\\ a_{p + 1} \\end{bmatrix} = \\begin{bmatrix} 0 \\\\ 0 \\\\ \\cdots \\\\ 0 \\end{bmatrix} \\] Thus, \\[\\forall i : \\mathbf{a}^T \\mathbf{r}_i = 0\\] and so \\[N(X) \\subseteq Row(X)^{\\perp}\\] Conversely, if \\(\\mathbf{a} \\in Row(X)^{\\perp}\\), then \\(\\forall i : \\mathbf{a}^T \\mathbf{r}_i = 0\\). This implies that \\(X\\mathbf{a} = \\mathbf{0}\\). Thus, \\[Row(X)^{\\perp} \\subseteq N(X)\\] and so \\[N(X) = Row(X)^{\\perp}\\] \\(N(X^T) = R(X)^{\\perp}\\) part in Theorem 1.4 will give the geometric insight to least squares solution. Theorem 1.5 Let \\(S\\) be a subspace of \\(\\mathbb{R}^n\\). Then \\[dim S + dim S^{\\perp} = n\\] If \\(\\{ \\mathbf{x}_1, \\ldots, \\mathbf{x}_r \\}\\) is a basis for \\(S\\) and \\(\\{ \\mathbf{x}_{r + 1}, \\ldots, \\mathbf{x}_n \\}\\) is a basis for \\(S^{\\perp}\\), then \\(\\{ \\mathbf{x}_1, \\ldots, \\mathbf{x}_r, \\mathbf{x}_{r + 1}, \\ldots, \\mathbf{x}_n \\}\\) is a basis for \\(\\mathbb{R}^n\\). Theorem 1.6 Let \\(S\\) be a subspace of \\(\\mathbb{R}^n\\). Then \\[\\mathbb{R}^n = S \\oplus S^{\\perp}\\] 1.6.2 Simple linear regression Theorem 1.7 Let \\(S\\) be a subspace of \\(\\mathbb{R}^n\\). For each \\(\\mathbf{y} \\in \\mathbf{R}^n\\), there exists a unique \\(\\mathbf{p} \\in S\\) that is closest to \\(\\mathbf{y}\\), i.e. \\[\\Vert \\mathbf{y} - \\mathbf{p} \\Vert &gt; \\Vert \\mathbf{y} - \\mathbf{\\hat{y}} \\Vert\\] for any \\(\\mathbf{p} \\neq \\mathbf{\\hat{y}}\\). Furthermore, a given vector \\(\\mathbf{p} \\in S\\) will be the closest to a given vector \\(\\mathbf{y} \\in \\mathbb{R}^n\\) if and only if \\[\\mathbf{y} - \\mathbf{\\hat{y}} \\in S^{\\perp}\\] Least square estimator \\((\\hat\\beta_0, \\hat\\beta_1)^T\\) minimizes \\[\\begin{equation} \\sum_{i = 1}^n (Y_i - \\beta_0 - \\beta_1 x_i)^2 = \\Vert \\mathbf{Y} - (\\beta_0 \\mathbf{1} + \\beta_1 \\mathbf{x}) \\Vert^2 \\tag{1.14} \\end{equation}\\] with respect to \\((\\hat\\beta_0, \\hat\\beta_1)^T \\in \\mathbb{R}^2\\) (where \\(\\mathbf{1} := (1, 1)^T\\)). Recall that the normal equation gives \\[\\sum_{i = 1}^n(Y_i - \\hat\\beta_0 - \\hat\\beta_1 x_i) = \\Big( \\mathbf{Y} - (\\hat\\beta_0 \\mathbf{1} + \\hat\\beta_1 \\mathbf{x}) \\Big)^T \\mathbf{1} = 0\\] and \\[\\sum_{i = 1}^n (Y_i - \\hat\\beta_0 - \\hat\\beta_1 x_i)x_i = \\Big( \\mathbf{Y} - (\\hat\\beta_0 \\mathbf{1} + \\hat\\beta_1 \\mathbf{x}) \\Big)^T \\mathbf{x} = 0\\] These two relation give \\[\\mathbf{Y} - (\\hat\\beta_0 \\mathbf{1} + \\hat\\beta_1 \\mathbf{x}) \\perp sp(\\{ \\mathbf{1}, \\mathbf{x} \\})^{\\perp}\\] i.e. \\(\\mathbf{\\hat{Y}} = \\hat\\beta_0 \\mathbf{1} + \\hat\\beta_1 \\mathbf{x}\\) is the projection of \\(\\mathbf{Y}\\). Theorem 1.7 can give the same result. \\[\\hat\\beta_0 \\mathbf{1} + \\hat\\beta_1 \\mathbf{x} \\in R([\\mathbf{1}, \\mathbf{x}])^{\\perp} = sp(\\{ \\mathbf{1}, \\mathbf{x} \\})^{\\perp}\\] Figure 1.5: Geometric Illustration of Simple Linear Regression We can see the details from Figure 1.5. In fact, decomposition of \\(SST\\) and \\(R^2\\) are also in here. Figure 1.6: Geometric Illustration of Decomposing SST See Figure 1.6. \\[ \\begin{cases} SST = \\lVert \\mathbf{Y} - \\overline{Y} \\mathbf{1} \\rVert^2 \\\\ SSR = \\lVert \\mathbf{\\hat{Y}} - \\overline{Y} \\mathbf{1} \\rVert^2 \\\\ SSE = \\lVert \\mathbf{Y} - \\mathbf{\\hat{Y}} \\rVert^2 \\end{cases} \\] Pythagorean law implies that \\[SST = SSR + SSE\\] Also, \\[R^2 = \\frac{SSR}{SST} = cos^2\\theta = \\hat\\rho_{XY}^2\\] 1.6.3 Projection mapping Look again Figure 1.5. Let \\(X \\equiv [\\mathbf{1}, \\mathbf{x}] \\in \\mathbb{R}^{n \\times 2}\\) and let \\(\\boldsymbol\\beta \\equiv (\\beta_0, \\beta_1)^T\\). By the fundamental subspaces theorem 1.4, \\[\\mathbf{Y} - X\\boldsymbol{\\hat\\beta} \\in Col(X)^{\\perp} = N(X^T)\\] Thus, \\[\\begin{equation} X^T(\\mathbf{Y} - X\\boldsymbol{\\hat\\beta}) = \\mathbf{0} \\tag{1.15} \\end{equation}\\] This is the another representation of normal equation. Then we now have \\[\\begin{equation*} \\begin{split} &amp; X^T\\mathbf{Y} - X^TX\\boldsymbol{\\hat\\beta} = \\mathbf{0} \\\\ &amp; \\Leftrightarrow X^T\\mathbf{Y} = X^TX\\boldsymbol{\\hat\\beta} \\end{split} \\end{equation*}\\] If \\(X^TX\\) is nonsingular, \\[\\boldsymbol{\\hat\\beta} = (X^TX)^{-1}X^T \\mathbf{Y}\\] It follows that \\[\\mathbf{\\hat{Y}} = X\\boldsymbol{\\hat\\beta} = X(X^TX)^{-1}X^T \\mathbf{Y}\\] Combining this equation and our figure, we can know that \\(X(X^TX)^{-1}X^T\\) projects \\(\\mathbf{Y}\\) from \\(\\mathbb{R}^n\\) onto \\(Col(X) = R(X)\\). This is called projection operator/mapping. Definition 1.10 (Projection matrix) Projection operator or mapping from \\(\\mathbb{R}^n\\) to \\(W\\) is written by \\[\\Pi(\\cdot \\mid W) := X(X^TX)^{-1}X^T\\] As mentioned, \\(X^TX\\) should be invertible to get the LSE solution. Theorem 1.8 Let \\(\\mathbf{Y} = X\\boldsymbol\\beta\\) inconsistent and let \\(X \\in \\mathbb{R}^{n \\times (p + 1)}\\) with \\(n &gt; p + 1\\). If \\(rank(X) = p + 1\\), i.e. full rank, then \\(X^T X\\) is invertible. Proof. Suppose that \\((X^TX)\\mathbf{b} = \\mathbf{0}\\). Then \\[X^T (X\\mathbf{b}) = \\mathbf{0}\\] By the fundamental subspaces theorem 1.4, \\[X\\mathbf{b} \\in N(X^T) = Col(X)^{\\perp}\\] By construction, \\[X\\mathbf{b} \\in Col(X) = N(X^T)^{\\perp}\\] Then \\[X\\mathbf{b} \\in N(X^T) \\cap N(X^T)^{\\perp} = \\{ \\mathbf{0} \\}\\] It follows that \\[X\\mathbf{b} = \\mathbf{0}\\] If \\(rank(X) = n\\), then the linear equation system has trivial solution \\(\\mathbf{b} = \\mathbf{0}\\) and so does \\(X^T (X\\mathbf{b}) = \\mathbf{0}\\). Hence, \\(X^T X\\) is invertible. Using projection matrix \\(\\Pi_W\\), we can re-express each sum of squares. Recall that when we only use \\(y_i\\) for regression fitting, the result becomes its average. It is because \\(\\mathbf{Y}\\) vector has been projected onto \\(sp(\\{ \\mathbf{1} \\})\\) line. Remark. \\[\\overline{Y}\\mathbf{1} = \\mathbf{1}(\\mathbf{1}^T\\mathbf{1})^{-1}\\mathbf{1}^T\\mathbf{Y} = \\Pi_{\\mathbf{1}}\\mathbf{Y}\\] \\[\\mathbf{\\hat{Y}} = X(X^TX)^{-1}X^T \\mathbf{Y} = \\Pi_X \\mathbf{Y}\\] Intuitively, every projection matrix is idempotent and symmetric. Once projected, the result is same when projecting it again. Corollary 1.1 (Sum of squares) \\(\\Pi_{\\mathbf{1}}\\) and \\(\\Pi_X\\) can express each \\(SS\\) as following. \\[SST = \\mathbf{Y}^T (I - \\Pi_{\\mathbf{1}}) \\mathbf{Y}\\] \\[SSR = \\mathbf{Y}^T (\\Pi_X - \\Pi_{\\mathbf{1}}) \\mathbf{Y}\\] \\[SSE = \\mathbf{Y}^T (I - \\Pi_X) \\mathbf{Y}\\] 1.7 Distributions 1.7.1 Mean response and response We have already look at predicting each mean response and response from equation (1.5) and (1.6). Theorem 1.9 (Estimation of the mean response) \\[\\hat\\mu_x \\equiv \\widehat{E(Y \\mid x)} = \\hat\\beta_0 + \\hat\\beta_1 x\\] Theorem 1.10 ((out of sample) Prediction of a response) \\[\\hat{Y_x} = \\hat\\beta_0 + \\hat\\beta_1 x\\] Recall that predicting 1.9 targets at \\[\\mu_x \\equiv E(Y \\mid x) = \\beta_0 + \\beta_1 x\\] which have been assumed to be true model. On the other hand, predicting 1.10 targets at \\[Y = \\beta_0 + \\beta_1 + \\epsilon_x\\] The linearity is not true in reality. So the errors caused by modeling linear model are included in \\(\\epsilon_x\\). This error term makes difference between properties of 1.9 and 1.10. To derive their distribution and see the difference, we additionaly assume Normality, i.e. \\[\\epsilon_i \\stackrel{iid}{\\sim} N(0, \\sigma^2)\\] 1.7.2 Regression coefficients Under Normality, we have \\[Y_i \\stackrel{indep}{\\sim} N(\\beta_0 + \\beta_1 x_i, \\sigma^2)\\] Then \\[ \\mathbf{Y} = \\begin{bmatrix} Y_1 \\\\ Y_2 \\\\ \\vdots \\\\ Y_n \\end{bmatrix} \\sim MVN_n\\Bigg( \\boldsymbol\\mu \\equiv \\begin{bmatrix} \\beta_0 + \\beta_1 x_1 \\\\ \\beta_0 + \\beta_1 x_2 \\\\ \\vdots \\\\ \\beta_0 + \\beta_1 x_n \\end{bmatrix}, \\Sigma \\equiv \\sigma^2 I = \\begin{bmatrix} \\sigma^2 &amp; 0 &amp; \\cdots &amp; 0 \\\\ 0 &amp; \\sigma^2 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ 0 &amp; 0 &amp; 0 &amp; \\sigma^2 \\end{bmatrix} \\Bigg) \\] Write \\(\\boldsymbol{\\hat\\beta} = (\\hat\\beta_0, \\hat\\beta_1)^T\\). From Lemma 1.2, \\[\\hat\\beta_0 = \\mathbf{a}^T\\mathbf{Y}\\] where \\(\\mathbf{a} = (a_1, \\ldots, a_n)^T \\in \\mathbb{R}^n\\) with \\(a_i = \\bigg( \\frac{1}{n} - \\frac{(x_i - \\overline{x})\\overline{x}}{S_{XX}} \\bigg)\\) and \\[\\hat\\beta_1 = \\mathbf{b}^T\\mathbf{Y}\\] where \\(\\mathbf{b} = (b_1, \\ldots, b_n)^T \\in \\mathbb{R}^n\\) with \\(b_i = \\frac{(x_i - \\overline{x})}{S_{XX}}\\). Let \\[A^T = [ \\mathbf{a}^T, \\mathbf{b}^T ]\\] Then \\[ \\boldsymbol{\\hat\\beta} = A\\mathbf{Y} \\] Linearity of the multivariate normal distribution, Proposition 1.1 and 1.2 imply that \\[\\begin{equation} \\boldsymbol{\\hat\\beta} = \\begin{bmatrix} \\hat\\beta_0 \\\\ \\hline \\hat\\beta_1 \\end{bmatrix} \\sim MVN \\bigg( A\\boldsymbol\\mu = \\begin{bmatrix} \\beta_0 \\\\ \\hline \\beta_1 \\end{bmatrix}, A\\Sigma A^T = \\sigma^2 AA^T = \\begin{bmatrix} \\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg)\\sigma^2 &amp; - \\frac{\\overline{x}}{S_{XX}}\\sigma^2 \\\\ \\hline - \\frac{\\overline{x}}{S_{XX}}\\sigma^2 &amp; \\frac{\\sigma^2}{S_{XX}} \\end{bmatrix} \\bigg) \\tag{1.16} \\end{equation}\\] Since the joint random vector follows multivariate normal distribution, each partitioned subset follow normal. For this theorem, see Johnson and Wichern (2013). Hence, we finally get the following result. Theorem 1.11 (Distributions of regression coefficients) Each regression coefficient follows Normal distribution. \\[\\hat\\beta_0 \\sim N \\bigg( \\beta_0, \\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg)\\sigma^2 \\bigg)\\] \\[\\hat\\beta_1 \\sim N \\bigg( \\beta_1, \\frac{\\sigma^2}{S_{XX}} \\bigg)\\] 1.7.3 Mean response In simple linear regression setting, we assume \\(\\mu_x = E(Y \\mid x) = \\beta_0 + \\beta_1 x\\) is true. delv %&gt;% ggplot(aes(x = x, y = y)) + geom_smooth(method = &quot;lm&quot;) + geom_point(alpha = .7) + labs( x = &quot;Number of Cases&quot;, y = &quot;Delivery Time&quot; ) Figure 1.7: Mean response and its standard deviation For example, in the Figure 1.7, the blue line indicates \\(E(Y \\mid X = x)\\) for each point \\(x\\). Without fitting using lm(), geom_smooth(method = \"lm\") let us visualize the fitted line. Since the default method is not the linear regression, the method option should be specified. delv %&gt;% mutate(eyx = predict(delv_fit, newdata = data.frame(x = x))) # A tibble: 25 x 3 y x eyx &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 16.7 7 18.6 2 11.5 3 9.85 3 12.0 3 9.85 4 14.9 4 12.0 5 13.8 6 16.4 6 18.1 7 18.6 7 8 2 7.67 8 17.8 7 18.6 9 79.2 30 68.6 10 21.5 5 14.2 # … with 15 more rows We have already seen in section 1.7.2 that the estimators \\(\\hat\\beta_0\\) and \\(\\hat\\beta_1\\) are random variables. So \\(\\hat\\mu_x\\) is. In fact, the ribbon of the line in Figure 1.7 represents upper and lower confidence limits on mean response. In the later section, we get to know that it is \\(+ t(n - 2)\\widehat{SE}(\\hat\\mu_x)\\) and \\(- t(n - 2) \\widehat{SE}(\\hat\\mu_x)\\). It can be drawn by default with the option of the geom_smooth(se = TRUE). Theorem 1.12 (Distribution of mean response estimator) \\(\\hat\\mu_x\\) is also Normally distributed. \\[\\hat\\mu_x \\sim N\\bigg( \\mu_x, \\sigma^2\\bigg( \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{XX}} \\bigg) \\bigg)\\] Proof. Since \\(\\hat\\mu_x = \\hat\\beta_0 + \\hat\\beta_1 x\\) is the linear combination of \\((\\hat\\beta_0, \\hat\\beta_1)^T\\), \\[\\hat\\mu_x \\sim N\\Big(E(\\hat\\mu_x), Var(\\hat\\mu_x)\\Big)\\] From Theorem 1.11, \\[E(\\hat\\mu_x) = E(\\hat\\beta_0) + E(\\hat\\beta_1)x = \\beta_0 + \\beta_1x \\equiv \\mu_x\\] and from Proposition 1.2 \\[\\begin{equation*} \\begin{split} Var(\\hat\\mu_x) &amp; = Var(\\hat\\beta_0 + \\hat\\beta_1 x) \\\\ &amp; = Var(\\hat\\beta_0) + x^2Var(\\hat\\beta_1) + 2xCov(\\hat\\beta_0, \\hat\\beta_1) \\\\ &amp; = \\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg)\\sigma^2 + \\frac{x^2\\sigma^2}{S_{XX}} - \\frac{2\\overline{x}x\\sigma^2}{S_{XX}} \\\\ &amp; = \\sigma^2\\bigg(\\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{XX}} \\bigg) \\end{split} \\end{equation*}\\] Corollary 1.2 \\[\\hat\\mu_x - \\mu_x \\sim N\\bigg( 0, \\sigma^2\\bigg( \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{XX}} \\bigg) \\bigg)\\] Denote that in both Theorem 1.12 and Corollary 1.2, \\(\\sigma^2\\) is parameter. So to use \\(SE(\\hat\\mu_x) = \\sqrt{Var(\\hat\\mu_x)}\\) in practice we plug in its estimator, usually Equation (1.7). Corollary 1.3 (Standard error of mean response estimator) \\[\\widehat{SE}(\\hat\\mu_x) = \\hat\\sigma^2\\bigg( \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{XX}} \\bigg)\\] where \\(\\hat\\sigma^2 = MSE\\) 1.7.4 Response Our goal is to predict each response at each point, i.e. \\(Y_x = \\beta_0 + \\beta_1 x + \\epsilon_x\\). \\(\\epsilon_x \\sim N(0, \\sigma^2)\\) is independent of the given data (\\(\\epsilon_1, \\ldots, \\epsilon_n\\)). In this sense, this prediction is called out of sample prediction. This setting makes difference between the residuals, which are correlated to the data. See Proposition 1.4 for this. This is occurred because each \\(\\hat\\beta_0\\) and \\(\\hat\\beta_1\\) is linear combination of \\(Y_1, \\ldots, Y_n\\), not \\(Y_x\\). While \\(Cov(Y_i, \\hat{Y_i}) &gt; 0, i = 1, \\ldots, n\\) (See Equation (1.12)), in case of out-of-sample \\(Y_x\\), \\[Cov(Y_x, \\hat{Y_x}) = Cov(Y_x, \\hat\\beta_0 + \\hat\\beta_1 x) = 0\\] Hence, arithmetically, this out of sample prediction becomes to have larger standard error. Proposition 1.7 (Joint distribution of coefficients and error term) \\((\\hat\\beta_0, \\hat\\beta_1, \\epsilon_x)^T\\) is Normally distributed. Proof. Want 1: \\((\\hat\\beta_0, \\hat\\beta_1)^T \\perp\\!\\!\\!\\perp \\epsilon_x\\) We have \\[\\begin{equation} \\begin{split} Cov((\\hat\\beta_0, \\hat\\beta_1)^T, \\epsilon_x) &amp; = \\Big[Cov(\\hat\\beta_i, \\epsilon_x) \\Big]_{2 \\times 1} \\\\ &amp; = \\bigg[Cov\\bigg(\\sum_{i = 1}^n k_i Y_i, \\epsilon_x \\bigg) \\bigg]_{2 \\times 1} \\qquad k_i = \\text{each linear coefficient for}\\: \\hat\\beta_0, \\hat\\beta_1 \\\\ &amp; = \\mathbf{0} \\end{split} \\tag{1.17} \\end{equation}\\] From Equation (1.16), \\[(\\hat\\beta_0, \\hat\\beta_1)^T \\sim MVN\\] and from assumption, \\[\\epsilon_x \\sim N(0, \\sigma^2)\\] It follows from Equation (1.17) that (Johnson and Wichern (2013)) \\[(\\hat\\beta_0, \\hat\\beta_1)^T \\perp\\!\\!\\!\\perp \\epsilon_x\\] Want 2: \\((\\hat\\beta_0, \\hat\\beta_1, \\epsilon_x)^T \\sim MVN\\) From independency, we have (Johnson and Wichern (2013)) \\[ \\begin{bmatrix} \\hat\\beta_0 \\\\ \\hat\\beta_1 \\\\ \\hline \\epsilon_x \\end{bmatrix} \\sim MVN_{2 + 1} \\bigg( \\begin{bmatrix} \\beta_0 \\\\ \\beta_1 \\\\ \\hline 0 \\end{bmatrix}, \\left[ \\begin{array}{c|c} Cov(\\boldsymbol{\\hat\\beta}) \\in \\mathbb{R}^{2 \\times 2} &amp; \\mathbf{0} \\in \\mathbb{R}^2 \\\\ \\hline \\mathbf{0}^T \\in \\mathbb{R}^{2 \\times 1} &amp; \\sigma^2 \\end{array} \\right] \\bigg) \\] This proposition gives clue to distribution of prediction error. Theorem 1.13 (Distribution of out-of-sample prediction error) Out of sample prediction error \\(\\hat{Y_x} - Y_x\\) is Normally distributed \\[\\hat{Y_x} - Y_x \\sim N\\bigg( 0, \\sigma^2 \\bigg( 1 + \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{XX}} \\bigg) \\bigg)\\] Proof. Note that \\[\\begin{equation*} \\begin{split} \\hat{Y_x} - Y_x &amp; = (\\hat\\beta_0 + \\hat\\beta_1 x) - (\\beta_0 + \\beta_1 x + \\epsilon_x) \\\\ &amp; = [1, x, -1] (\\hat\\beta_0, \\hat\\beta_1, \\epsilon_x)^T - \\beta_0 - \\beta_1 x \\end{split} \\end{equation*}\\] i.e. \\(\\hat{Y_x} - Y_x\\) is a linear combination of \\((\\hat\\beta_0, \\hat\\beta_1, \\epsilon_x)^T\\). From prosition 1.7, \\[\\begin{equation} \\begin{split} \\hat{Y_x} - Y_x &amp; \\sim MVN \\Bigg( [1, x, -1]\\begin{bmatrix} \\beta_0 \\\\ \\beta_1 \\\\ 0 \\end{bmatrix} - \\beta_0 - \\beta_1 x, [1, x, -1] \\left[ \\begin{array}{c|c} Cov(\\boldsymbol{\\hat\\beta}) \\in \\mathbb{R}^{2 \\times 2} &amp; \\mathbf{0} \\in \\mathbb{R}^2 \\\\ \\hline \\mathbf{0}^T \\in \\mathbb{R}^{2 \\times 1} &amp; \\sigma^2 \\end{array} \\right] \\begin{bmatrix} 1 \\\\ x \\\\ -1 \\end{bmatrix} \\Bigg) \\\\ &amp; \\stackrel{d}{=} MVN \\bigg( 0, \\sigma^2\\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} - 2 \\frac{\\overline{x}x}{S_{XX}} + \\frac{x^2}{S_{XX}} \\bigg) + 1 \\bigg) \\\\ &amp; \\stackrel{d}{=} MVN \\bigg( 0, \\sigma^2\\bigg( 1 + \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{XX}} \\bigg) \\bigg) \\end{split} \\tag{1.18} \\end{equation}\\] Now we know the standard error of this out-of-sample prediction error. \\[SE(\\hat{Y_x} - Y_x) = \\sigma^2\\bigg( 1 + \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{XX}} \\bigg)\\] We can see this standard error is always larger than of mean response estimator due to \\(1\\) in the bracket, i.e. \\(\\sigma^2\\). As mentioned, this is due to \\(\\epsilon\\) term. When we estimate or predict the mean response the model have been assumed to be true. In this out-of-sample prediction setting, however, the model can be wrong. This assumption error is also included in \\(\\epsilon\\) term and it is called irreducible error, which cannot be reduced anymore. Remark. \\[SE(\\hat\\mu_x - \\mu_x) &lt; SE(\\hat{Y_x} - Y_x)\\] It might be more clear if we see the inequality in the above remark. We know the fact that \\(\\hat{Y_x}\\) and \\(Y_x\\) are uncorrelated in this out-of-sample setting. \\(Y_x\\) is random variable, while \\(\\mu_x\\) is constant. Then we can re-express the inequality as \\[SE(\\hat\\mu_x) &lt; SE(\\hat{Y_x}) + SE(Y_x)\\] Actually, both \\(\\hat\\mu_x\\) and \\(\\hat{Y_x}\\) are estimated as \\(\\hat\\beta_0 + \\hat\\beta_1 x\\). Thus, \\(SE(Y_x) = \\sigma^2\\) makes out-of-sample more noisy. To use standard error practically, we use \\(\\hat\\sigma^2\\) as in corollary 1.3. Corollary 1.4 (Standard error of out-of-sample prediction error) \\[\\widehat{SE}(\\hat{Y_x} - Y_x) = \\hat\\sigma^2\\bigg( 1 + \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{XX}} \\bigg)\\] where \\(\\hat\\sigma^2 = MSE\\) 1.8 Statistical Inference Based on each distribution of estimator in section 1.7, we can construct various inferece for each \\(\\beta_0\\) \\(\\beta_1\\) \\(\\mu_x\\) \\(Y_x\\) \\(\\sigma^2\\) We can get the standard error for each coefficient through summary() function. summary(delv_fit) Call: lm(formula = y ~ x, data = delv) Residuals: Min 1Q Median 3Q Max -7.581 -1.874 -0.349 2.181 10.634 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.321 1.371 2.42 0.024 * x 2.176 0.124 17.55 8.2e-15 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 4.18 on 23 degrees of freedom Multiple R-squared: 0.93, Adjusted R-squared: 0.927 F-statistic: 308 on 1 and 23 DF, p-value: 8.22e-15 Or more state-or-art way, broom:tidy() function has a method for each model object to make tidy data: tibble. broom::tidy(delv_fit) # A tibble: 2 x 5 term estimate std.error statistic p.value &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 (Intercept) 3.32 1.37 2.42 2.37e- 2 2 x 2.18 0.124 17.5 8.22e-15 1.8.1 Confidence interval Consider standardization. \\[\\frac{\\hat\\theta - \\theta}{\\sqrt{SE(\\hat\\theta)}}\\] Each \\(SE\\) includes \\(\\sigma^2\\) as we have already seen. First think about known \\(\\sigma^2\\) setting. All three estimators follow Normal distribution, and \\(SE\\) is constant by our the setting. Then we can construct each confidence interval as \\[\\hat\\theta \\pm z_{\\frac{\\alpha}{2}} \\sqrt{SE(\\hat\\theta)}\\] Figure 1.8: Confidence Interval when \\(\\sigma^2\\) is known Now just plug in the results of section 1.7. For each regression coefficient, Proposition 1.8 (Confidence intervals on \\(\\beta\\)) With known \\(\\sigma^2\\), \\((1 - \\alpha)100 \\%\\) confidence intervals on \\(\\beta_0\\) and \\(\\beta_1\\) are given as \\[\\beta_0 : \\quad \\hat\\beta_0 \\pm z_{\\frac{\\alpha}{2}} \\sqrt{\\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg) \\sigma^2}\\] \\[\\beta_1 : \\quad \\hat\\beta_1 \\pm z_{\\frac{\\alpha}{2}} \\sqrt{\\frac{\\sigma^2}{S_{XX}}}\\] Proposition 1.9 (Confidence interval on \\(\\hat\\mu_x\\)) With known \\(\\sigma^2\\), \\((1 - \\alpha)100 \\%\\) confidence interval on \\(\\hat\\mu_x\\) is given as \\[\\mu_x : \\quad \\hat\\mu_x \\pm z_{\\frac{\\alpha}{2}} \\sqrt{\\sigma^2 \\bigg( \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{xx}} \\bigg)}\\] In practice, however, we do not know \\(\\sigma^2\\). In this case, we replace \\(\\sigma^2\\) with \\(\\hat\\sigma^2 = \\frac{1}{n - 2}\\sum\\limits_{i = 1}^n (\\hat{Y_i} - Y_i)^2 = MSE\\). Then \\[\\frac{\\hat\\theta - \\theta}{\\sqrt{\\widehat{SE}}} = \\frac{\\frac{\\hat\\theta - \\theta}{\\sqrt{SE = \\sigma^2(\\cdot)}}}{\\sqrt{\\frac{\\frac{SSE}{\\sigma^2}}{n - 2}\\bigg( \\cdot \\bigg)}} = \\frac{\\frac{\\hat\\theta - \\theta}{\\sqrt{SE = \\sigma^2}} \\sim N(0, 1)}{\\sqrt{\\frac{\\frac{SSE}{\\sigma^2} \\sim \\chi^2(n - 2)}{n - 2}}} \\sim t(n - 2)\\] Thus, we need to replace \\(z_{\\frac{\\alpha}{2}}\\) with \\(t_{\\frac{\\alpha}{2}}(n - 2)\\). Proposition 1.10 (Confidence intervals on \\(\\beta\\) when unknown \\(\\sigma^2\\)) With unknown \\(\\sigma^2\\), \\((1 - \\alpha)100 \\%\\) confidence intervals on \\(\\beta_0\\) and \\(\\beta_1\\) are given as \\[\\beta_0 : \\quad \\hat\\beta_0 \\pm t_{\\frac{\\alpha}{2}}(n - 2) \\sqrt{\\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{XX}} \\bigg) \\hat\\sigma^2}\\] \\[\\beta_1 : \\quad \\hat\\beta_1 \\pm t_{\\frac{\\alpha}{2}}(n - 2) \\sqrt{\\frac{\\hat\\sigma^2}{S_{XX}}}\\] where \\(\\hat\\sigma^2 = MSE\\) Here we can estimate the intervals. Basically, confint() function gives this interval. confint(delv_fit, level = .95) 2.5 % 97.5 % (Intercept) 0.484 6.16 x 1.920 2.43 Proposition 1.11 (Confidence interval on \\(\\hat\\mu_x\\) when unknown \\(\\sigma^2\\)) With unknown \\(\\sigma^2\\), \\((1 - \\alpha)100 \\%\\) confidence interval on \\(\\hat\\mu_x\\) is given as \\[\\mu_x : \\quad \\hat\\mu_x \\pm t_{\\frac{\\alpha}{2}}(n - 2) \\sqrt{\\hat\\sigma^2 \\bigg( \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{xx}} \\bigg)}\\] where \\(\\hat\\sigma^2 = MSE\\) predict() provides options for this confidence interval. Specify interval = \"confidence\". This argument has three option. \"none\": just compute fitted value, by default. \"confidence\": confidence interval of mean response \"prediction\": prediction interval of out-of-sample prediction Default level is 0.95. predict(delv_fit, interval = &quot;confidence&quot;, level = .95) %&gt;% tbl_df() # A tibble: 25 x 3 fit lwr upr &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 18.6 16.8 20.3 2 9.85 7.57 12.1 3 9.85 7.57 12.1 4 12.0 9.91 14.1 5 16.4 14.5 18.2 6 18.6 16.8 20.3 7 7.67 5.22 10.1 8 18.6 16.8 20.3 9 68.6 62.9 74.3 10 14.2 12.2 16.2 # … with 15 more rows 1.8.2 Prediction interval One proceeds in a similar way for out-of-sample \\(Y_x\\). Proposition 1.12 (Prediction interval on \\(\\hat{Y_x}\\)) With known \\(\\sigma^2\\), \\((1 - \\alpha)100 \\%\\) confidence interval on \\(\\hat\\mu_x\\) is given as \\[Y_x : \\quad \\hat{Y_x} \\pm z_{\\frac{\\alpha}{2}} \\sqrt{\\sigma^2 \\bigg( 1 + \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{xx}} \\bigg)}\\] Also, with unknown \\(\\sigma^2\\), Proposition 1.13 (Prediction interval on \\(\\hat{Y_x}\\) when unknown \\(\\sigma^2\\)) With unknown \\(\\sigma^2\\), \\((1 - \\alpha)100 \\%\\) confidence interval on \\(\\hat\\mu_x\\) is given as \\[Y_x : \\quad \\hat{Y_x} \\pm t_{\\frac{\\alpha}{2}}(n - 2) \\sqrt{\\hat\\sigma^2 \\bigg( 1 + \\frac{1}{n} + \\frac{(x - \\overline{x})^2}{S_{xx}} \\bigg)}\\] where \\(\\hat\\sigma^2 = MSE\\) Since this is out-of-sample setting, we should also give newdata option. Otherwise, we will get warning message. Denote that this argument only receive data.frame object with same element names. predict(delv_fit, newdata = data.frame(x = 31:35), interval = &quot;prediction&quot;, level = .95) fit lwr upr 1 70.8 60.3 81.3 2 73.0 62.3 83.6 3 75.1 64.3 85.9 4 77.3 66.4 88.3 5 79.5 68.4 90.6 1.8.3 Hypothesis testing Look again the output of summary.lm() and broom::tidy.lm(). summary(delv_fit) Call: lm(formula = y ~ x, data = delv) Residuals: Min 1Q Median 3Q Max -7.581 -1.874 -0.349 2.181 10.634 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.321 1.371 2.42 0.024 * x 2.176 0.124 17.55 8.2e-15 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 4.18 on 23 degrees of freedom Multiple R-squared: 0.93, Adjusted R-squared: 0.927 F-statistic: 308 on 1 and 23 DF, p-value: 8.22e-15 We can see t value and Pr(&gt;|t|). At the same time, statistic and p.value. What are these values? These are the results of the following tests. \\[H_0 : \\beta_0 = \\alpha_0 \\qquad \\text{vs} \\qquad H_1 : \\beta_0 \\neq \\alpha_0\\] \\[\\begin{equation} T = \\frac{\\hat\\beta_0 - \\alpha_0}{\\hat\\sigma \\sqrt{\\bigg( \\frac{1}{n} + \\frac{\\overline{x}^2}{S_{xx}} \\bigg)}} \\stackrel{H_0}{\\sim} t(n - 2) \\tag{1.19} \\end{equation}\\] For this test statistic (1.19), \\[\\text{reject}\\: H_0 \\quad \\text{if} \\: \\lvert T \\rvert &gt; t_{\\frac{\\alpha}{2}}(n - 2)\\] Figure 1.9: Rejection region for \\(\\beta_0\\) More importantly, we test \\(\\beta_1\\) which means slope \\[H_0 : \\beta_1 = \\alpha_1 \\qquad \\text{vs} \\qquad H_1 : \\beta_1 \\neq \\alpha_1\\] \\[\\begin{equation} T = \\frac{\\hat\\beta_0 - \\alpha_0}{\\hat\\sigma \\sqrt{\\frac{1}{S_{xx}}}} \\stackrel{H_0}{\\sim} t(n - 2) \\tag{1.20} \\end{equation}\\] For this test statistic (1.20), \\[\\text{reject}\\: H_0 \\quad \\text{if} \\: \\lvert T \\rvert &gt; t_{\\frac{\\alpha}{2}}(n - 2)\\] Looking at these two statistics, we can intuitively know the meaning. As \\(\\lvert \\hat\\beta_1 - \\alpha_1 \\rvert\\) becomes larger, the data support \\(H_1\\). 1.9 Analysis of Variance 1.9.1 Useful distributions In linear regression setting, we usually assume \\(\\epsilon_i \\stackrel{iid}{\\sim}N(0, \\sigma^2)\\). There are some useful distributions around Normal. Proposition 1.14 (\\(\\chi^2\\)-distribution) Square of standard normal follows \\(\\chi^2\\)-distribution. If \\(Z \\sim N(0, 1)\\), then \\(Z^2 \\sim \\chi^2(1)\\) If \\(Z_i \\stackrel{indep}{\\sim}N(0, 1)\\), then \\(Z_1^2 + \\cdots + Z_n^2 \\sim \\chi^2(n)\\) Proposition 1.15 (t-distribution) Let \\(Z \\sim N(0, 1) \\perp\\!\\!\\!\\perp V \\sim \\chi^2(m)\\). Then \\[T = \\frac{Z}{\\sqrt{V / m}} \\sim t(m)\\] Proposition 1.16 (F-distribution) Let \\(V \\sim \\chi^2(m) \\perp\\!\\!\\!\\perp W \\sim \\chi^2(n)\\). Then \\[F = \\frac{V / m}{W / n} \\sim F(m, n)\\] Also, there is non-central analogue of these three distributions, i.e. starting from \\(Z \\sim N(\\mu, 1)\\). Proposition 1.17 (Noncentral \\(\\chi^2\\)-distribution) Square of scaled normal follows non-central \\(\\chi^2\\)-distribution. If \\(Z_i \\stackrel{indep}{\\sim}N(\\mu_i, 1)\\), then \\(Z_1^2 + \\cdots + Z_n^2 \\sim \\chi^2(n, \\sum\\limits_{i = 1}^n \\mu_i^2)\\) \\(\\sum\\limits_{i = 1}^n \\mu_i^2\\) is called a non-central parameter. Proposition 1.18 (Noncentral t-distribution) Let \\(X \\sim N(\\mu, 1) \\perp\\!\\!\\!\\perp V \\sim \\chi^2(m)\\). Then \\[T = \\frac{Z}{\\sqrt{V / m}} \\sim t(m, \\mu)\\] \\(\\mu\\) is called a non-central parameter. Proposition 1.19 (Noncentral F-distribution) Let \\(V \\sim \\chi^2(m, \\delta) \\perp\\!\\!\\!\\perp W \\sim \\chi^2(n)\\). Then \\[F = \\frac{V / m}{W / n} \\sim F(m, n, \\delta)\\] \\(\\delta\\) is called a non-central parameter. 1.9.2 Quadratic form Now we can determine the distributions of various quadratic forms. The reason we are taking care of this is ANOVA deals with sum of squares, i.e. quadratic form. Theorem 1.14 (Idempotent and symmetric) Let \\(A \\in \\mathbb{R}^{k \\times k}\\) be idempotent and symmetric. Then \\(\\text{(a)}\\: A^n\\) is also idempotent \\(\\text{(b)}\\: I - A\\) is also idempotent \\(\\text{(c)}\\:\\) Every eigenvalue of \\(A\\) is either \\(0\\) or \\(1\\) so that \\(tr(A) = rank(A)\\) Proof. (a) and (b) are trivial. \\[(A^n)^2 = (A^2)^n = A^n\\] \\[(I - A)^2 = I - 2A + A^2 = I - A\\] Fix \\(\\lambda\\) an eigenvalue of \\(A\\). Let \\(\\mathbf{v} \\neq \\mathbf{0}\\) be the corresponding eigenvector. By definition, \\[A\\mathbf{v} = \\lambda \\mathbf{v}\\] Then \\[A^2\\mathbf{v} = \\lambda(A\\mathbf{v}) = \\lambda^2\\mathbf{v}\\] and so \\(\\lambda^2\\) is eigenvalue of \\(A^2\\). Since \\(A^2 = A\\), \\[\\lambda = \\lambda^2\\] Hence, \\[\\lambda = 0 \\:\\text{or}\\: 1\\] Note that for every matrix and its eigenvalues \\(\\lambda_j\\) \\[tr(X) = \\sum_{j = 1}^p \\lambda_j, \\quad rank(X) = \\text{the number of non-zero}\\: \\lambda_j\\] Since \\(\\lambda = 0, 1\\) of A, \\[tr(A) = rank(A)\\] Proposition 1.20 (Independence) Assume \\(\\mathbf{Y} \\sim MVN(\\mathbf\\mu, \\Sigma)\\). Then If \\(A\\) and \\(B\\) are symmetric, \\[Y^T AY \\perp\\!\\!\\!\\perp Y^T BY \\Leftrightarrow A\\Sigma B = 0\\] If \\(A\\) is symmetric, \\[Y^T AY \\perp\\!\\!\\!\\perp BY \\Leftrightarrow B\\Sigma A = 0\\] Theorem 1.15 (Distribution of quadratic form) Assume that \\(\\mathbf{Y} \\sim MVN(\\mathbf\\mu, \\Sigma)\\) and that \\(A\\) is symmetric and idempotent. Then \\[Y^T AT \\sim \\chi^2(K, \\delta)\\] where \\(K = rank(A)\\) and \\(\\delta = \\boldsymbol\\mu^T A \\boldsymbol\\mu\\). Furthermore, \\[ \\begin{cases} E(Y^T AT) = K + \\delta \\\\ Var(Y^T AT) = 2(K + 2\\delta) \\end{cases} \\] Corollary 1.5 (Inner product of standard normal vector) Let \\(\\mathbf{Z} = (Z_1, \\ldots, Z_n)^T \\sim MVN(\\mathbf{0}, I_n)\\). Then \\[\\mathbf{Z}^T\\mathbf{Z} = \\sum_{i = 1}^n Z_i^2 \\sim \\chi^2(n)\\] Proof. From Theorem 1.15 point of view, \\[\\mathbf{Z}^T\\mathbf{Z} = \\mathbf{Z}^T I_n \\mathbf{Z}\\] Thus, \\[K = rank(I_n) = n\\] \\[\\delta = \\mathbf{0}\\] Using the above facts, we can now show distributions of sums of squares. First recall that \\[\\mathbf{Y} \\sim MVN(X\\boldsymbol\\beta, \\sigma^2 I)\\] Proposition 1.21 (Distribution of SSE) \\[\\frac{SSE}{\\sigma^2} \\sim \\chi^2(n - 2, 0)\\] Proof. From Corollary 1.1, write \\[\\frac{SSE}{\\sigma^2} = \\bigg(\\frac{\\mathbf{Y}}{\\sigma}\\bigg)^T (I - \\Pi_X) \\bigg(\\frac{\\mathbf{Y}}{\\sigma}\\bigg)\\] Note that \\[\\frac{\\mathbf{Y}}{\\sigma} \\sim MVN(\\frac{1}{\\sigma}X\\boldsymbol\\beta, I)\\] Since \\(I - \\Pi_X\\) is idempotent and symmetric, \\[K = rank(I - \\Pi_X) = tr(I - \\Pi_X) = n - rank(\\Pi_X) = n - 2\\] \\[\\begin{equation} \\label{eq:delta1} \\begin{split} \\delta &amp; = \\bigg(\\frac{X\\boldsymbol\\beta}{\\sigma}\\bigg)^T (I - \\Pi_X) \\bigg(\\frac{X\\boldsymbol\\beta}{\\sigma}\\bigg) \\\\ &amp; = \\frac{\\boldsymbol\\beta^TX^TX\\boldsymbol\\beta}{\\sigma^2} - \\frac{(\\boldsymbol\\beta^TX^T)X(X^TX)^{-1}X^T(X\\boldsymbol\\beta)}{\\sigma^2} \\\\ &amp; = \\frac{\\boldsymbol\\beta^TX^TX\\boldsymbol\\beta}{\\sigma^2} - \\frac{\\boldsymbol\\beta^TX^TX\\boldsymbol\\beta}{\\sigma^2} \\\\ &amp; = 0 \\end{split} \\end{equation}\\] Hence, \\[\\frac{SSE}{\\sigma^2} \\sim \\chi^2(n - 2)\\] Proposition 1.22 (Distribution of SSR) \\[\\frac{SSR}{\\sigma^2} \\sim \\chi^2(1, \\delta)\\] where \\(\\delta = \\sum\\limits_{i = 1}^n (x_i - \\overline{x})^2 \\beta_1^2 = \\frac{S_{xx}\\beta_1^2}{\\sigma^2}\\) Proof. From Corollary 1.1, write \\[\\frac{SSR}{\\sigma^2} = \\bigg(\\frac{\\mathbf{Y}}{\\sigma}\\bigg)^T (\\Pi_X - \\Pi_{\\mathbf{1}}) \\bigg(\\frac{\\mathbf{Y}}{\\sigma}\\bigg)\\] Note that \\(\\Pi_X - \\Pi_{\\mathbf{1}}\\) is symmetric idempotent. One proceeds in a similar way. \\[K = rank(\\Pi_X - \\Pi_{\\mathbf{1}}) = tr(\\Pi_X - \\Pi_{\\mathbf{1}}) = rank(\\Pi_X) - rank(\\Pi_{\\mathbf{1}}) = 2 - 1 = 1\\] \\[\\begin{equation*} \\begin{split} \\delta &amp; = \\bigg(\\frac{X\\boldsymbol\\beta}{\\sigma}\\bigg)^T (\\Pi_X - \\Pi_{\\mathbf{1}}) \\bigg(\\frac{X\\boldsymbol\\beta}{\\sigma}\\bigg) \\qquad \\because \\frac{\\mathbf{Y}}{\\sigma} \\sim MVN(\\frac{1}{\\sigma}X\\boldsymbol\\beta, I) \\\\ &amp; = \\frac{\\boldsymbol\\beta^TX^TX\\boldsymbol\\beta}{\\sigma^2} - \\frac{\\boldsymbol\\beta^TX^T\\Pi_{\\mathbf{1}}X\\boldsymbol\\beta}{\\sigma^2} \\\\ &amp; = \\frac{\\boldsymbol\\beta^T(X^TX - X^T \\Pi_{\\mathbf{1}}X)\\boldsymbol\\beta}{\\sigma^2} \\\\ &amp; = \\frac{\\boldsymbol\\beta^T \\Big\\{ X^T(I - \\Pi_{\\mathbf{1}})X \\Big\\} \\boldsymbol\\beta }{\\sigma^2} \\end{split} \\end{equation*}\\] Since \\(\\mathbf{1} \\in sp(\\{ \\mathbf{1} \\})\\), \\[\\Pi_{\\mathbf{1}} \\mathbf{1} = \\mathbf{1}\\] It gives that \\[\\mathbf{1}^T(I - \\Pi_{\\mathbf{1}})\\mathbf{1} = 0\\] If \\(\\mathbf{x} \\neq \\mathbf{1}\\), then we have \\[\\mathbf{x}^T(I - \\Pi_{\\mathbf{1}})\\mathbf{x} = \\sum_{i = 1}^n (x_i - \\overline{x})^2 = S_{xx}\\] Recall that \\[\\overline{x}\\mathbf{1} = \\mathbf{1}(\\mathbf{1}^T\\mathbf{1})^{-1}\\mathbf{1}^T\\mathbf{x} = \\Pi_{\\mathbf{1}}\\mathbf{x}\\] Then we have \\[\\mathbf{1}^T(I - \\Pi_{\\mathbf{1}})\\mathbf{x} = \\sum x_i - n \\overline{x} = 0\\] Similarly, \\[\\mathbf{x}^T(I - \\Pi_{\\mathbf{1}})\\mathbf{1} = n \\overline{x} - \\sum x_i = 0\\] Hence by partitioning \\(X = [\\mathbf{1} \\mid \\mathbf{x}]\\), \\[\\begin{equation} \\label{eq:delta2} \\begin{split} \\delta &amp; = \\frac{\\boldsymbol\\beta^T \\Big\\{ [\\mathbf{1} \\mid \\mathbf{x}]^T(I - \\Pi_{\\mathbf{1}})[\\mathbf{1} \\mid \\mathbf{x}] \\Big\\} \\boldsymbol\\beta }{\\sigma^2} \\\\ &amp; = \\frac{\\boldsymbol\\beta^T \\begin{bmatrix} 0 &amp; 0 \\\\ 0 &amp; S_{xx} \\end{bmatrix} \\boldsymbol\\beta}{\\sigma^2} \\\\ &amp; = \\frac{S_{xx}\\beta_1^2}{\\sigma^2} \\end{split} \\end{equation}\\] Proposition 1.23 (Independence) SSE and SSR are independent, i.e. \\[SSE \\perp\\!\\!\\!\\perp SSR\\] Proof. Note that both \\(SSE\\) and \\(SSR\\) are quadratic forms of \\(\\mathbf{Y} \\sim MVN(X\\boldsymbol\\beta, \\sigma^2 I)\\) and that each \\(I - \\Pi_X\\) and \\(\\Pi_X - \\Pi_{\\mathbf{1}}\\) is symmetric. Then from Proposition 1.20, Claim: \\((I - \\Pi_X)(\\sigma^2I)(\\Pi_X - \\Pi_{\\mathbf{1}}) = 0\\), i.e. \\((I - \\Pi_X)(\\Pi_X - \\Pi_{\\mathbf{1}}) = 0\\) It is obvious that \\[\\Pi_X\\Pi_{\\mathbf{1}} = \\Pi_{\\mathbf{1}}\\] Then \\[\\begin{equation*} \\begin{split} (I - \\Pi_X)(\\Pi_X - \\Pi_{\\mathbf{1}}) &amp; = \\Pi_X - \\Pi_{\\mathbf{1}} - \\Pi_X^2 + \\Pi_X\\Pi_{\\mathbf{1}} \\\\ &amp; = \\Pi_X - \\Pi_{\\mathbf{1}} - \\Pi_X + \\Pi_{\\mathbf{1}} \\qquad \\because \\text{idempotent} \\\\ &amp; = 0 \\end{split} \\end{equation*}\\] This completes the proof. Proposition 1.24 (Independence) SSE and \\((\\hat\\beta_0, \\hat\\beta_1)\\) are independent, i.e. \\[SSE \\perp\\!\\!\\!\\perp(\\hat\\beta_0, \\hat\\beta_1)^T\\] Proof. Note that \\[\\boldsymbol{\\hat\\beta}= (\\hat\\beta_0, \\hat\\beta_1)^T = (X^TX)^{-1}X^T\\mathbf{Y}\\] Since \\(I - \\Pi_X\\) of \\(SSE\\) is symmetric, from Proposition 1.20, Claim: \\(((X^TX)^{-1}X^T)(\\sigma^2I)(I - \\Pi_X) = 0\\), i.e. \\(((X^TX)^{-1}X^T)(I - \\Pi_X) = 0\\) Since \\(\\Pi_X = X(X^TX)^{-1}X^T\\), \\[\\begin{equation*} \\begin{split} ((X^TX)^{-1}X^T)(I - \\Pi_X) &amp; = (X^TX)^{-1}X^T - (X^TX)^{-1}X^TX(X^TX)^{-1}X^T \\\\ &amp; = (X^TX)^{-1}X^T - (X^TX)^{-1}X^T \\\\ &amp; = 0 \\end{split} \\end{equation*}\\] This completes the proof. Proposition 1.25 (Distribution of SST) \\[\\frac{SST}{\\sigma^2} \\sim \\chi^2(n - 1, \\delta)\\] where \\(\\delta = \\sum\\limits_{i = 1}^n (x_i - \\overline{x})^2 \\beta_1^2 = \\frac{S_{xx}\\beta_1^2}{\\sigma^2}\\) Proof. It proceedes in a similary way from Corollary 1.1 \\[\\frac{SST}{\\sigma^2} = \\bigg(\\frac{\\mathbf{Y}}{\\sigma}\\bigg)^T (I - \\Pi_{\\mathbf{1}}) \\bigg(\\frac{\\mathbf{Y}}{\\sigma}\\bigg)\\] Since \\(I - \\Pi_{\\mathbf{1}}\\) is symmetric idempotent, \\[K = rank(I - \\Pi_{\\mathbf{1}}) = tr(I - \\Pi_{\\mathbf{1}}) = n - rank(\\Pi_{\\mathbf{1}}) = n - 1\\] \\[\\begin{equation*} \\begin{split} \\delta &amp; = \\bigg(\\frac{X\\boldsymbol\\beta}{\\sigma}\\bigg)^T (I - \\Pi_{\\mathbf{1}}) \\bigg(\\frac{X\\boldsymbol\\beta}{\\sigma}\\bigg) \\\\ &amp; = \\frac{S_{xx}\\beta_1^2}{\\sigma^2} \\qquad \\because \\eqref{eq:delta1} \\:\\text{and}\\: \\eqref{eq:delta2} \\end{split} \\end{equation*}\\] 1.9.3 ANOVA for testing significance of regression Recall that \\[SST = SSR + SSE\\] \\(SST\\): the variation of a response itself \\(SSR\\): the variation of a response explained by the model \\(SSE\\): the variation of a response that cannot be explained by the model As mentioned in section 1.5.4, whether the model is useful or not can depend on the proportion of \\(SSR\\) versus \\(SSE\\) in constant \\(SST\\). When \\(SSR\\) is large compared to \\(SSE\\), we can say that the model is good. On the other hand, when \\(SSR\\) is not large, the model might be poor. This is what \\(R^2\\) measures intuitively. However, this direct comparison somtimes does not work in many times. Both \\(SSR\\) and \\(SSE\\) comes from different distribution, which have different degrees of freedom. So we compare standardized versions, i.e. divided by the degrees of freedom. Definition 1.11 (Degrees of freedom) Degrees of freedom of each sum of squares is \\[df = \\text{the number of deviation} - \\text{the number of linear constraints}\\] Corollary 1.6 (df of SS) \\(df\\) of each sum of square is computed as \\(\\text{(a)}\\: df(SST) = n - 1\\) \\(\\text{(b)}\\: df(SSR) = 1\\) \\(\\text{(c)}\\: df(SSE) = n - 2\\) Proof. (a) Since \\(\\sum (Y_i - \\overline{Y}) = 0\\), we have \\(1\\) linear constraints. Thus, \\[df(SST) = n - 1\\] Note that \\(\\hat{Y_i} - \\overline{Y} = \\hat\\beta_1(x_i - \\overline{x})\\) where \\(\\sum (x_i - \\overline{x}) = 0\\). Thus, \\[df(SSR) = n - (n - 1) = 1\\] From Example 1.1, \\(\\sum (Y_i - \\hat{Y_i}) = 0\\) and \\(\\sum x_i (Y_i - \\hat{Y_i}) = 0\\). Thus, \\[df(SSE) = n - 2\\] Dividing sum of squares in \\(df\\), we can standardize it. Definition 1.12 (Mean square) Mean square is a sum of square \\(SS\\) divided by its degree of freedom \\(df\\) \\[MS := \\frac{SS}{df}\\] Using the values of corollary 1.6 we can define each mean square for \\(SSR\\) and \\(SSE\\). Definition 1.13 (Regression mean square) \\[MSR := \\frac{SSR}{1} = SSR\\] From Proposition 1.22, the following corollary can be drawn. Corollary 1.7 (Distribution of MSR) Under \\(H_0: \\beta_1 = 0\\), \\[\\frac{SSR}{\\sigma^2} \\stackrel{H_0}{\\sim} \\chi^2(1)\\] Now standardize residual sum of square. Definition 1.14 (Residual mean square) \\[MSE := \\frac{SSE}{n - 2}\\] From Proposition 1.22, we can construct same statistic. In fact, \\(\\frac{SSE}{\\sigma^2}\\) follows \\(\\chi^2(n - 2)\\) whether or not \\(\\beta_1\\) is zero. Its \\(\\delta = 0\\). Corollary 1.8 (Distribution of MSE) \\[\\frac{SSE}{\\sigma^2} \\sim \\chi^2(n - 2)\\] Finally, we can now use Proposition 1.16 so that \\[ F \\equiv \\frac{MSR}{MSE} = \\frac{\\frac{SSE / \\sigma^2 \\sim \\chi^2(1)}{1}}{\\frac{SSR / \\sigma^2 \\stackrel{H_0}{\\sim}\\chi^2(n - 2)}{n - 2}} \\stackrel{H_0}{\\sim}F(1, n - 2) \\] By construction, this test statistic is used for \\[H_0: \\beta_1 = 0\\] which means that the predictor does not explain the response anything. In other words, we are testing that \\[\\begin{equation} H_0: \\text{Model is not useful at all} \\qquad \\text{vs} \\qquad H_1: \\text{Model can explain data} \\tag{1.21} \\end{equation}\\] Remark (F statistic on testing significance). Null hypothesis (1.21) can be tested with \\(F\\)-statistic. \\[F_0 = \\frac{MSR}{MSE} = \\frac{SSR / df(SSR)}{SSE / df(SSE)} \\stackrel{H_0}{\\sim}F(df(SSR), df(SSE))\\] Then we reject \\(H_0\\) if \\[F_0 &gt; F_\\alpha\\bigg( df(SSR), df(SSE) \\bigg)\\] Figure 1.10: Rejection region for significance testing summary(delv_fit) Call: lm(formula = y ~ x, data = delv) Residuals: Min 1Q Median 3Q Max -7.581 -1.874 -0.349 2.181 10.634 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.321 1.371 2.42 0.024 * x 2.176 0.124 17.55 8.2e-15 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 4.18 on 23 degrees of freedom Multiple R-squared: 0.93, Adjusted R-squared: 0.927 F-statistic: 308 on 1 and 23 DF, p-value: 8.22e-15 This statistic is F-statistic included in summary.lm() output. This is saved as $fstatistic. summary(delv_fit)$fstatistic value numdf dendf 308 1 23 We usually summarize these statistic in table form, so called ANOVA table. Source SS df MS F p-value Model \\(SSR\\) \\(1\\) \\(MSR\\) \\(F_0\\) p-value Error \\(SSE\\) \\(n - 2\\) \\(MSE\\) Total \\(SST\\) \\(n - 1\\) To get this table, just use anova() for lm object. anova(delv_fit) Analysis of Variance Table Response: y Df Sum Sq Mean Sq F value Pr(&gt;F) x 1 5382 5382 308 8.2e-15 *** Residuals 23 402 17 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Since the last Total row is just sum of the model and error, the function does not give it. To use this table as data.frame more easily, just implement broom::tidy as before. anova(delv_fit) %&gt;% broom::tidy() # A tibble: 2 x 6 term df sumsq meansq statistic p.value &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 x 1 5382. 5382. 308. 8.22e-15 2 Residuals 23 402. 17.5 NA NA Denote that here simple linear regression setting \\(F\\)-statistic and \\(t\\)-statistic of Equation (1.20) perform exactly same thing, \\(H_0 : \\beta_1 = 0\\). In fact, we know that \\[F(1, k) \\stackrel{d}{=} T_k^2\\] Remark. In the simple linear regression setting, \\(F\\)-test for significance and \\(t\\)-test for no slope are equivalent, i.e. under \\(H_0 : \\beta_1 = 0\\) \\[F_0 = \\frac{\\hat\\beta_1 S_{xx}}{\\sigma^2} = \\bigg( \\frac{\\hat\\beta_1}{\\sigma / \\sqrt{S_xx}} \\bigg) = T_0^2\\] References "],
["multiple.html", "Chapter 2 Multiple Linear Regression 2.1 Model 2.2 Least Square Estimation", " Chapter 2 Multiple Linear Regression 2.1 Model (cem &lt;- MPV::cement %&gt;% tbl_df()) # A tibble: 13 x 5 y x1 x2 x3 x4 &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; 1 78.5 7 26 6 60 2 74.3 1 29 15 52 3 104. 11 56 8 20 4 87.6 11 31 8 47 5 95.9 7 52 6 33 6 109. 11 55 9 22 7 103. 3 71 17 6 8 72.5 1 31 22 44 9 93.1 2 54 18 22 10 116. 21 47 4 26 11 83.8 1 40 23 34 12 113. 11 66 9 12 13 109. 10 68 8 12 Above is a data set about cement and concerning four ingredients from the Montgomery, Peck, and Vining (2015) textbook. y: heat evolved in calories per gram of cement x1: tricalcium aluminate x2: tricalcium silicate x3: tetracalcium alumino ferrite x4: dicalcium silicate Given data \\((x_{11}, x_{12}, \\ldots, x_{1p}, Y_1), \\ldots, (x_{n1}, x_{n2}, \\ldots, x_{np}, Y_n)\\) (\\(p = 4\\)), we try to fit linear regression model \\[Y_i = \\beta_0 + \\beta_1 x_{i1} + \\cdots + \\beta_p x_{ip} + \\epsilon_{i}\\] with \\[\\epsilon_i \\stackrel{iid}{\\sim}(0, \\sigma^2)\\] Compared to simple linear regression problem 1, we have more parameters for coefficients \\[(\\beta_0, \\beta_1, \\ldots, \\beta_p, \\sigma^2)\\] Each \\(\\beta_j\\) is a change of \\(Y\\) when each predictor variable \\(x_j\\) increases in 1 unit while the others fixed. In this part, we use matrix notation. Extending our former matrix work 1.6, \\[ \\underset{\\substack{\\\\ \\\\ \\\\ \\\\ \\huge \\mathbf{Y}}}{\\begin{bmatrix} Y_1 \\\\ Y_2 \\\\ \\vdots \\\\ Y_n \\end{bmatrix}} = \\underset{\\substack{\\\\ \\\\ \\\\ \\\\ \\huge X}}{\\begin{bmatrix} 1 &amp; x_{11} &amp; \\cdots &amp; x_{1p} \\\\ 1 &amp; x_{21} &amp; \\cdots &amp; x_{2p} \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ 1 &amp; x_{n1} &amp; \\cdots &amp; x_{np} \\end{bmatrix}} \\underset{\\substack{\\\\ \\\\ \\\\ \\\\ \\huge \\boldsymbol\\beta}}{\\begin{bmatrix} \\beta_0 \\\\ \\vdots \\\\ \\beta_p \\end{bmatrix}} + \\underset{\\substack{\\\\ \\\\ \\\\ \\\\ \\huge \\boldsymbol\\epsilon}}{\\begin{bmatrix} \\epsilon_1 \\\\ \\epsilon_2 \\\\ \\vdots \\\\ \\epsilon_n \\end{bmatrix}} \\] where \\(\\epsilon_i\\) are i.i.d., and \\[E\\boldsymbol\\epsilon = \\mathbf{0}\\] \\[Var\\boldsymbol\\epsilon = \\sigma^2 I\\] 2.2 Least Square Estimation Write \\(\\boldsymbol\\beta \\equiv (\\beta_1, \\ldots, \\beta_p)^T \\in \\mathbb{R}^{p + 1}\\). Extend Equation (1.14). \\[\\begin{equation} \\begin{split} \\boldsymbol{\\hat\\beta} &amp; = \\mathop\\mathrm{argmin}_{\\boldsymbol\\beta \\in \\mathbb{R}^{p + 1}} \\sum_{i = 1}^n (Y_i - \\beta_0 - \\beta_1 x_{i1} - \\cdots - \\beta_p x_{ip})^2 \\\\ &amp; = \\mathop\\mathrm{argmin}_{\\boldsymbol\\beta \\in \\mathbb{R}^{p + 1}} \\lVert \\mathbf{Y} - \\beta_0 \\mathbf{1} - \\beta_1 \\mathbf{x}_1 - \\cdots - \\beta_p \\mathbf{x}_p \\rVert^2 \\\\ &amp; = \\mathop\\mathrm{argmin}_{\\boldsymbol\\beta \\in \\mathbb{R}^{p + 1}} \\lVert \\mathbf{Y} - X\\boldsymbol\\beta \\rVert^2 \\end{split} \\tag{2.1} \\end{equation}\\] As discussed, the solution \\(\\boldsymbol{\\hat\\beta}\\) is related to the projection. \\(X\\boldsymbol{\\hat\\beta}\\) is a projection of \\(\\mathbf{Y}\\) onto \\(Col(X)\\). 2.2.1 Normal equation Now recap the section 1.6.3. Fundamental subspaces theorem 1.4 implies that \\[\\mathbf{Y} - X\\boldsymbol{\\hat\\beta} \\in Col(X)^{\\perp} = N(X^T)\\] From the second part of subset, i.e. \\(N(X^T)\\), we now have Normal equation \\[\\begin{equation} X^T(\\mathbf{Y} - X\\boldsymbol{\\hat\\beta}) = \\mathbf{0} \\tag{2.2} \\end{equation}\\] This is equivalent to \\[X^T\\mathbf{Y} = X^TX\\boldsymbol{\\hat\\beta}\\] Hence, if \\(X^T X\\) is invertible, the equation gives unique solution \\[\\boldsymbol{\\hat\\beta} = (X^TX)^{-1}X^T \\mathbf{Y}\\] Our first question is when \\(X^T X\\) is invertible, and Theorem 1.8 have said that it is when the model matrix \\(X\\) is full rank. Lemma 2.1 Let \\(X \\in \\mathbb{R}^{n \\times (p + 1)}\\) be any model matrix. Then \\(X^T X\\) is always non-negative definite. \\[\\forall \\mathbf{v} \\in \\mathbb{R}^{p + 1} : \\mathbf{v}^T(X^T X)\\mathbf{v} \\ge 0\\] Proof. Let \\(\\mathbf{v} \\in \\mathbb{R}^{p + 1}\\). Then \\[\\mathbf{v}^T(X^T X)\\mathbf{v} = (X\\mathbf{v})^T (X\\mathbf{v}) = \\lVert X\\mathbf{v} \\rVert^2 \\ge 0\\] This lemma can also prove our Theorem 1.8. Theorem 2.1 Let \\(\\mathbf{Y} = X\\boldsymbol\\beta\\) inconsistent and let \\(X \\in \\mathbb{R}^{n \\times (p + 1)}\\) with \\(n &gt; p + 1\\). If \\(rank(X) = p + 1\\), i.e. full rank, then \\(X^T X\\) is invertible. Proof. Let \\(\\mathbf{c} \\in \\mathbb{R}^{(p + 1)}\\) Suppose that \\(X^T X\\) is positive definite. \\[\\begin{equation*} \\begin{split} &amp; \\Leftrightarrow \\mathbf{c}^TX^T X \\mathbf{c} = 0 \\quad \\text{implies} \\quad \\mathbf{c} = \\mathbf{0} \\\\ &amp; \\Leftrightarrow X\\mathbf{c} = \\mathbf{0} \\quad \\text{implies} \\quad \\mathbf{c} = \\mathbf{0} \\\\ &amp; \\Leftrightarrow \\text{columns of}\\: X \\:\\text{linearly independent} \\\\ &amp; \\Leftrightarrow rank(X) = p + 1 \\end{split} \\end{equation*}\\] 2.2.2 Orthogonal decomposition Let’s briefly look at orthogonalization process. Theorem 2.2 (Gram-Schmidt Process) Let \\(\\{ \\mathbf{a}_1, \\ldots, \\mathbf{a}_m \\}\\) be a basis for the inner product space \\(V\\). Let \\[\\mathbf{u}_1 = \\bigg( \\frac{1}{\\lVert \\mathbf{a}_1 \\rVert} \\bigg) \\mathbf{a}_1\\] and define next \\(\\mathbf{u}_2, \\ldots, \\mathbf{u}_m\\) recursively by \\[\\mathbf{u}_{k + 1} = \\frac{1}{\\lVert \\mathbf{a}_{k + 1} - \\mathbf{p}_k \\rVert}(\\mathbf{a}_{k + 1} - \\mathbf{p}_k)\\] for \\(k = 1, \\ldots, m - 1\\), where \\[\\mathbf{p}_k = &lt;\\mathbf{a}_{k + 1}, \\mathbf{u}_1&gt; \\mathbf{u}_1 + &lt;\\mathbf{a}_{k + 1}, \\mathbf{u}_2 &gt;\\mathbf{u}_2 + \\cdots + &lt; \\mathbf{a}_{k + 1}, \\mathbf{u} &gt; \\mathbf{u}_k\\] is the projection of \\(\\mathbf{a}_{k + 1}\\) onto \\(sp(\\{ \\mathbf{u}_1, \\ldots, \\mathbf{u}_k \\})\\). Hence, we get \\(\\{ \\mathbf{u}_1, \\ldots, \\mathbf{u}_m \\}\\) is an orthonormal basis for \\(V\\). This orthonormal basis gives some useful facts with least squares problem (Leon 2014). Theorem 2.3 Let \\(Col(X)\\) be a subspace of \\(\\mathbb{R}^n\\), let \\(\\mathbf{Y} \\in \\mathbb{R}^n\\), and let \\(\\{ \\mathbf{u}_0, \\ldots, \\mathbf{u}_{p} \\}\\) be an orthonormal basis for \\(Col(X)\\). If \\[\\mathbf{\\hat{Y}} = \\sum_{j = 0}^p \\hat\\beta_j \\mathbf{u}_j\\] where \\[\\hat\\beta_j = \\Pi(\\mathbf{Y} \\mid R(\\mathbf{u}_j)) \\quad \\text{for each} \\: i\\] then \\(\\mathbf{\\hat{Y}} - \\mathbf{Y} \\in Col(X)^{\\perp}\\). Theorem 2.4 Under the hypothesis of Theorem 2.3, \\(\\mathbf{\\hat{Y}} \\in Col(X)\\) is the closest to \\(\\mathbf{Y}\\) amongst its any element \\(\\mathbf{p}\\), i.e. \\[\\Vert \\mathbf{p} - \\mathbf{Y} \\Vert &gt; \\Vert \\mathbf{\\hat{Y}} - \\mathbf{Y} \\Vert\\] for any \\(\\mathbf{p} \\neq \\mathbf{\\hat{Y}}\\) in \\(Col(X)\\) In other words, projection of \\(\\mathbf{Y}\\) onto \\(Col(X)\\), \\(\\mathbf{\\hat{Y}}\\) can be represented as sum of projections of \\(\\mathbf{Y}\\) onto each (orthogonal) individual variable. Before looking at individual basis, consider two-block space. Write \\[ X = \\left[\\begin{array}{c|ccc} 1 &amp; x_{11} &amp; \\cdots &amp; x_{1p} \\\\ 1 &amp; x_{21} &amp; \\cdots &amp; x_{2p} \\\\ \\vdots &amp; \\vdots &amp; \\vdots &amp; \\vdots \\\\ 1 &amp; x_{n1} &amp; \\cdots &amp; x_{np} \\end{array}\\right] = [\\mathbf{1}, \\mathbb{X}_A] \\] Consider \\(R(X)\\), \\(R(\\mathbf{1})\\), and \\(R(\\mathbb{X}_A)\\). To decompose subspace \\(R(X)\\), we try to orthogonalize \\(\\mathbf{1}\\) and \\(\\mathbb{X}_A\\) applying G-S process 2.2. \\[\\mathbf{1} \\perp \\mathbb{X}_A - \\Pi_{\\mathbf{1}}\\mathbb{X}_A\\] Theorem 1.6 implies that \\[R(X) = R(\\mathbf{1}) \\oplus R(\\mathbb{X}_A - \\Pi_{\\mathbf{1}}\\mathbb{X}_A)\\] Theorem 2.5 (Orthogonal decomposition) Let \\(X = [\\mathbf{1}, \\mathbb{X}_A]\\). Then \\[R(X) = R(\\mathbf{1}) \\oplus R(\\mathbb{X}_A - \\Pi_{\\mathbf{1}}\\mathbb{X}_A)\\] \\[\\Pi(\\cdot \\mid R(X)) = \\Pi(\\cdot \\mid R(\\mathbf{1})) + \\Pi(\\cdot \\mid R(\\mathbb{X}_A - \\Pi_{\\mathbf{1}}\\mathbb{X}_A))\\] Write \\[\\mathbb{X}_{A, \\perp} := \\mathbb{X}_A - \\Pi_{\\mathbf{1}}\\mathbb{X}_A\\] Note that \\[\\Pi_{\\mathbf{1}} = \\mathbf{1}(\\mathbf{1}^T\\mathbf{1})^{-1}\\mathbf{1}^T = \\frac{1}{n}\\mathbf{1}\\mathbf{1}^T\\] Then \\[\\begin{equation} \\begin{split} X\\boldsymbol{\\hat\\beta} &amp; = \\hat\\beta_0\\mathbf{1} + \\mathbb{X}_A\\boldsymbol{\\hat\\beta}_A \\\\ &amp; = \\hat\\beta_0\\mathbf{1} + (\\mathbb{X}_{A, \\perp} + \\Pi_{\\mathbf{1}}\\mathbb{X}_A)\\boldsymbol{\\hat\\beta}_A \\\\ &amp; = \\Big(\\hat\\beta_0 + \\frac{1}{n}\\mathbf{1}^T\\mathbb{X}_A\\boldsymbol{\\hat\\beta}_A \\Big)\\mathbf{1} + \\mathbb{X}_{A,\\perp}\\boldsymbol{\\hat\\beta}_A \\qquad \\because \\hat\\beta_0 + \\frac{1}{n}\\mathbf{1}^T\\mathbb{X}_A\\boldsymbol{\\hat\\beta}_A \\in \\mathbb{R} \\end{split} \\tag{2.3} \\end{equation}\\] From (ii) of Theorem 2.5, \\[\\begin{equation} \\begin{split} \\Pi(\\mathbf{Y} \\mid R(X)) &amp; = \\Pi(\\mathbf{Y} \\mid R(\\mathbf{1})) + \\Pi(\\mathbf{Y} \\mid R(\\mathbb{X}_{A,\\perp})) \\\\ &amp; = \\overline{Y}\\mathbf{1} + \\mathbb{X}_{A,\\perp}(\\mathbb{X}_{A,\\perp}^T\\mathbb{X}_{A,\\perp})^{-1}\\mathbb{X}_{A,\\perp}^T\\mathbf{Y} \\end{split} \\tag{2.4} \\end{equation}\\] Equations (2.3) and (2.4) give that \\[ \\begin{cases} \\hat\\beta_0 = \\overline{Y} - \\frac{1}{n}\\mathbf{1}\\mathbb{X}_A\\boldsymbol{\\hat\\beta}_A \\\\ \\boldsymbol{\\hat\\beta}_A = (\\mathbb{X}_{A,\\perp}^T\\mathbb{X}_{A,\\perp})^{-1}\\mathbb{X}_{A,\\perp}^T\\mathbf{Y} \\end{cases} \\] Figure 2.1: Orthogonal decomposition of the column space and LSE See Figure 2.1. Two are orthogonal, so sum of projections onto them become LSE. In fact, each projection indicate each regression coefficient. When we do not have orthogonal basis, however, each projection is nothing. Figure 2.2: Non-orthongality In this situation, we have to do orthogonalization. \\[\\tilde{\\mathbb{X}}_A = \\Pi_{\\mathbf{1}}\\mathbb{X}_A + (\\mathbb{X}_A - \\Pi_{\\mathbf{1}}\\mathbb{X}_A)\\] 2.2.3 Gram-Schmidt QR factorization "]
]
